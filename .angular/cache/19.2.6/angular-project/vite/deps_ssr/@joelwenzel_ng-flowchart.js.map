{
  "version": 3,
  "sources": ["../../../../../../node_modules/@joelwenzel/ng-flowchart/fesm2022/joelwenzel-ng-flowchart.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { Component, Input, ViewChild, HostListener, Injectable, Inject, Injector, EventEmitter, ViewEncapsulation, Output, TemplateRef, Type, ViewContainerRef, Directive, HostBinding, NgModule } from '@angular/core';\nimport { fromEvent, debounceTime } from 'rxjs';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nconst _c0 = [\"arrow\"];\nconst _c1 = [\"arrowPadding\"];\nconst _c2 = (a0, a1, a2) => ({\n  height: a0,\n  width: a1,\n  opacity: a2\n});\nconst _c3 = a0 => ({\n  \"ngflowchart-connector-selected\": a0\n});\nfunction NgFlowchartConnectorComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"div\", 12);\n    i0.ɵɵlistener(\"click\", function NgFlowchartConnectorComponent_div_0_Template_div_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.deleteConnector($event));\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(2, \"svg\", 13)(3, \"defs\")(4, \"style\");\n    i0.ɵɵtext(5, \" .cls-trashcan-icon { fill-rule: evenodd; } \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"title\");\n    i0.ɵɵtext(7, \"Delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"path\", 14);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"left\", ctx_r1.deleteButtonPosition.x, \"px\")(\"top\", ctx_r1.deleteButtonPosition.y, \"px\");\n  }\n}\nconst _c4 = (a0, a1, a2, a3, a4) => ({\n  height: a0,\n  width: a1,\n  left: a2,\n  top: a3,\n  opacity: a4\n});\nconst _c5 = [\"connectorPad\"];\nfunction NgFlowchartConnectorPadComponent__svg_svg_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 2, 0);\n    i0.ɵɵelement(2, \"circle\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"height\", ctx_r0.padRadius * 2 + ctx_r0.strokeWidth)(\"width\", ctx_r0.padRadius * 2 + ctx_r0.strokeWidth);\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"cx\", ctx_r0.padRadius + ctx_r0.strokeWidth / 2)(\"cy\", ctx_r0.padRadius + ctx_r0.strokeWidth / 2)(\"r\", ctx_r0.padRadius)(\"stroke-width\", ctx_r0.strokeWidth);\n  }\n}\nconst _c6 = [\"canvasContent\"];\nconst _c7 = (a0, a1) => ({\n  data: a0,\n  id: a1\n});\nconst _c8 = a0 => ({\n  $implicit: a0\n});\nfunction NgFlowchartStepComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nvar NgFlowchart;\n(function (NgFlowchart) {\n  class Flow {\n    constructor(canvas) {\n      this.canvas = canvas;\n    }\n    /**\n     * Returns the json representation of this flow\n     * @param indent Optional indent to specify for formatting\n     */\n    toJSON(indent) {\n      return JSON.stringify(this.toObject(), null, indent);\n    }\n    toObject() {\n      return {\n        root: this.canvas.flow.rootStep?.toJSON(),\n        connectors: this.canvas.flow.connectors?.map(c => c.toJSON())\n      };\n    }\n    /**\n     * Create a flow and render it on the canvas from a json string\n     * @param json The json string of the flow to render\n     */\n    async upload(json) {\n      let jsonObj = typeof json === 'string' ? JSON.parse(json) : json;\n      let root = jsonObj.root;\n      let connectors = jsonObj.connectors;\n      this.clear();\n      await this.canvas.upload(root, connectors);\n    }\n    /**\n     * Returns the root step of the flow chart\n     */\n    getRoot() {\n      return this.canvas.flow.rootStep;\n    }\n    /**\n     * Finds a step in the flow chart by a given id\n     * @param id Id of the step to find. By default, the html id of the step\n     */\n    getStep(id) {\n      return this.canvas.flow.steps.find(child => child.id == id);\n    }\n    /**\n     * Re-renders the canvas. Generally this should only be used in rare circumstances\n     * @param pretty Attempt to recenter the flow in the canvas\n     */\n    render(pretty) {\n      this.canvas.reRender(pretty);\n    }\n    /**\n     * Clears all flow chart, reseting the current canvas\n     */\n    clear() {\n      if (this.canvas.flow?.rootStep) {\n        this.canvas.flow.rootStep.destroy(true, false);\n        this.canvas.reRender();\n      }\n    }\n  }\n  NgFlowchart.Flow = Flow;\n  class Options {\n    constructor() {\n      /** The gap (in pixels) between flow steps*/\n      this.stepGap = 40;\n      /** An inner deadzone radius (in pixels) that will not register the hover icon  */\n      this.hoverDeadzoneRadius = 20;\n      /** Is the flow sequential? If true, then you will not be able to drag parallel steps */\n      this.isSequential = false;\n      /** The default root position when dropped. Default is TOP_CENTER */\n      this.rootPosition = 'TOP_CENTER';\n      /** Should the canvas be centered when a resize is detected? */\n      this.centerOnResize = true;\n      /** Canvas zoom options. Defaults to mouse wheel zoom */\n      this.zoom = {\n        mode: 'WHEEL',\n        defaultStep: 0.1,\n        skipRender: false\n      };\n      /** Drag canvas to scroll. Choose which mouse buttons to move with. Default is right click. */\n      this.dragScroll = ['RIGHT'];\n      /** Canvas flow orientation. Horizontal rotates the ABOVE, BELOW, LEFT, RIGHT drop positions -90 degrees visually. */\n      this.orientation = 'VERTICAL';\n      /** Enables use of the manual connectors for dragging the output of a step to any other step. Default is false. */\n      this.manualConnectors = false;\n    }\n  }\n  NgFlowchart.Options = Options;\n  let DropType;\n  (function (DropType) {\n    DropType[\"Step\"] = \"STEP\";\n    DropType[\"Connector\"] = \"CONNECTOR\";\n  })(DropType = NgFlowchart.DropType || (NgFlowchart.DropType = {}));\n  let DropSource;\n  (function (DropSource) {\n    DropSource[\"Canvas\"] = \"FROM_CANVAS\";\n    DropSource[\"Palette\"] = \"FROM_PALETTE\";\n  })(DropSource = NgFlowchart.DropSource || (NgFlowchart.DropSource = {}));\n})(NgFlowchart || (NgFlowchart = {}));\nconst CONSTANTS = {\n  DROP_HOVER_ATTR: 'ngflowchart-drop-hover',\n  CANVAS_CONTENT_CLASS: 'ngflowchart-canvas-content',\n  CANVAS_CONTENT_ID: 'ngflowchart-canvas-content',\n  CANVAS_CLASS: 'ngflowchart-canvas',\n  CANVAS_STEP_CLASS: 'ngflowchart-canvas-step'\n};\nclass NgFlowchartConnectorComponent {\n  set connector(connector) {\n    this._connector = connector;\n  }\n  get connector() {\n    return this._connector;\n  }\n  set autoPosition(pos) {\n    this._position = pos;\n    this.setConnectorPosition();\n    this.containerWidth = Math.abs(pos.start[0] - pos.end[0]);\n    this.containerHeight = Math.abs(pos.start[1] - pos.end[1]);\n    this.updatePath();\n  }\n  onClick(event) {\n    const path = this.arrow.nativeElement;\n    if (event.target === this.arrowPadding.nativeElement && !this.selected) {\n      path.parentElement.setAttribute('marker-end', 'url(#connectorArrowheadSelected)');\n      let bounds = path.getBoundingClientRect();\n      const mouseX = event.clientX - bounds.left;\n      const mouseY = event.clientY - bounds.top;\n      const coord = this.canvas.scaleCoordinate([mouseX + 15, mouseY - 5]);\n      this.deleteButtonPosition = {\n        x: coord[0],\n        y: coord[1]\n      };\n      this.selected = true;\n    }\n  }\n  onDocumentClick(event) {\n    const path = this.arrow.nativeElement;\n    const insideMenuClicked = event.target.matches('.ngflowchart-connector-menu *');\n    if (event.target !== this.arrowPadding.nativeElement && !insideMenuClicked) {\n      path.parentElement.setAttribute('marker-end', 'url(#connectorArrowhead)');\n      this.selected = false;\n    }\n  }\n  onMouseOver(target) {\n    if (!this.selected && target === this.arrowPadding.nativeElement) {\n      const path = this.arrow.nativeElement;\n      path.parentElement.setAttribute('marker-end', 'url(#connectorArrowheadHover)');\n    }\n  }\n  onMouseOut(target) {\n    if (!this.selected && target === this.arrowPadding.nativeElement) {\n      const path = this.arrow.nativeElement;\n      path.parentElement.setAttribute('marker-end', 'url(#connectorArrowhead)');\n    }\n  }\n  get yOffset() {\n    return this.canvas.options.options.orientation === 'VERTICAL' ? 6 : 0;\n  }\n  get xOffset() {\n    return this.canvas.options.options.orientation === 'HORIZONTAL' ? 6 : 0;\n  }\n  constructor(element) {\n    this.element = element;\n    this.selected = false;\n    this.opacity = 1;\n    this.containerWidth = 0;\n    this.containerHeight = 0;\n  }\n  ngAfterViewInit() {\n    this.updatePath();\n  }\n  toJSON() {\n    return {\n      startStepId: this._connector.startStepId,\n      endStepId: this._connector.endStepId\n    };\n  }\n  deleteConnector(event) {\n    this.destroy0();\n    this.canvas.reRender(true);\n    this.canvas.options.callbacks.afterDeleteConnector && this.canvas.options.callbacks.afterDeleteConnector(this);\n  }\n  destroy0() {\n    this.compRef.destroy();\n    this.canvas.flow.removeConnector(this);\n  }\n  setConnectorPosition() {\n    const left = Math.min(this._position.start[0], this._position.end[0]);\n    const top = Math.min(this._position.start[1], this._position.end[1]);\n    this.element.nativeElement.style.left = `${left}px`;\n    this.element.nativeElement.style.top = `${top}px`;\n  }\n  updatePath() {\n    if (!this.arrow?.nativeElement) {\n      return;\n    }\n    const pos = this._position;\n    let start = new Array(2);\n    let end = new Array(2);\n    if (pos.start[1] > pos.end[1]) {\n      start[1] = this.containerHeight + this.yOffset;\n      end[1] = 0;\n      if (pos.start[0] > pos.end[0]) {\n        // top left\n        start[0] = this.containerWidth + this.xOffset;\n        end[0] = 0;\n      } else {\n        //topright\n        start[0] = this.xOffset;\n        end[0] = this.containerWidth;\n      }\n    } else {\n      start[1] = this.yOffset;\n      end[1] = this.containerHeight;\n      if (pos.start[0] > pos.end[0]) {\n        // bottom left\n        start[0] = this.containerWidth + this.xOffset;\n        end[0] = 0;\n      } else {\n        //bottom right\n        start[0] = this.xOffset;\n        end[0] = this.containerWidth;\n      }\n    }\n    const arrow = `\n      M${start[0]} ${start[1]}\n      L${end[0]} ${end[1]}\n    `;\n    this.arrow.nativeElement.setAttribute('d', arrow);\n    this.arrowPadding.nativeElement.setAttribute('d', arrow);\n  }\n  static {\n    this.ɵfac = function NgFlowchartConnectorComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgFlowchartConnectorComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NgFlowchartConnectorComponent,\n      selectors: [[\"ng-flowchart-connector\"]],\n      viewQuery: function NgFlowchartConnectorComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n          i0.ɵɵviewQuery(_c1, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.arrow = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.arrowPadding = _t.first);\n        }\n      },\n      hostBindings: function NgFlowchartConnectorComponent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function NgFlowchartConnectorComponent_click_HostBindingHandler($event) {\n            return ctx.onClick($event);\n          })(\"mousedown\", function NgFlowchartConnectorComponent_mousedown_HostBindingHandler($event) {\n            return ctx.onDocumentClick($event);\n          }, false, i0.ɵɵresolveDocument)(\"mouseover\", function NgFlowchartConnectorComponent_mouseover_HostBindingHandler($event) {\n            return ctx.onMouseOver($event.target);\n          })(\"mouseout\", function NgFlowchartConnectorComponent_mouseout_HostBindingHandler($event) {\n            return ctx.onMouseOut($event.target);\n          });\n        }\n      },\n      inputs: {\n        canvas: \"canvas\",\n        compRef: \"compRef\",\n        connector: \"connector\",\n        autoPosition: \"autoPosition\"\n      },\n      standalone: false,\n      decls: 14,\n      vars: 9,\n      consts: [[\"arrow\", \"\"], [\"arrowPadding\", \"\"], [\"class\", \"ngflowchart-connector-menu\", 3, \"left\", \"top\", 4, \"ngIf\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", 1, \"ngflowchart-connector\", 3, \"ngStyle\", \"ngClass\"], [\"id\", \"connectorArrowhead\", \"viewBox\", \"0 0 10 10\", \"refX\", \"8\", \"refY\", \"5\", \"markerWidth\", \"10\", \"markerHeight\", \"10\", \"orient\", \"auto\", \"markerUnits\", \"userSpaceOnUse\", \"fill\", \"grey\"], [\"d\", \"M 0 0 L 10 5 L 0 10 z\"], [\"id\", \"connectorArrowheadHover\", \"viewBox\", \"0 0 10 10\", \"refX\", \"8\", \"refY\", \"5\", \"markerWidth\", \"10\", \"markerHeight\", \"10\", \"orient\", \"auto\", \"markerUnits\", \"userSpaceOnUse\", \"fill\", \"black\"], [\"id\", \"connectorArrowheadSelected\", \"viewBox\", \"0 0 10 10\", \"refX\", \"8\", \"refY\", \"5\", \"markerWidth\", \"10\", \"markerHeight\", \"10\", \"orient\", \"auto\", \"markerUnits\", \"userSpaceOnUse\", \"fill\", \"green\"], [\"id\", \"arrowpath\", \"fill\", \"none\", \"stroke\", \"grey\", \"stroke-width\", \"2\", \"marker-end\", \"url(#connectorArrowhead)\"], [\"id\", \"arrow\"], [\"id\", \"arrowPadding\", \"stroke-width\", \"10\", \"stroke\", \"transparent\", \"stroke-dasharray\", \"none\"], [1, \"ngflowchart-connector-menu\"], [1, \"ngflowchart-delete-connector\", 3, \"click\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"id\", \"deleteIcon\", \"viewBox\", \"0 0 105.16 122.88\"], [\"d\", \"M11.17 37.16H94.65a8.4 8.4 0 0 1 2 .16 5.93 5.93 0 0 1 2.88 1.56 5.43 5.43 0 0 1 1.64 3.34 7.65 7.65 0 0 1-.06 1.44L94 117.31v0l0 .13 0 .28v0a7.06 7.06 0 0 1-.2.9v0l0 .06v0a5.89 5.89 0 0 1-5.47 4.07H17.32a6.17 6.17 0 0 1-1.25-.19 6.17 6.17 0 0 1-1.16-.48h0a6.18 6.18 0 0 1-3.08-4.88l-7-73.49a7.69 7.69 0 0 1-.06-1.66 5.37 5.37 0 0 1 1.63-3.29 6 6 0 0 1 3-1.58 8.94 8.94 0 0 1 1.79-.13ZM5.65 8.8H37.12V6h0a2.44 2.44 0 0 1 0-.27 6 6 0 0 1 1.76-4h0A6 6 0 0 1 43.09 0H62.46l.3 0a6 6 0 0 1 5.7 6V6h0V8.8h32l.39 0a4.7 4.7 0 0 1 4.31 4.43c0 .18 0 .32 0 .5v9.86a2.59 2.59 0 0 1-2.59 2.59H2.59A2.59 2.59 0 0 1 0 23.62V13.53H0a1.56 1.56 0 0 1 0-.31v0A4.72 4.72 0 0 1 3.88 8.88 10.4 10.4 0 0 1 5.65 8.8Zm42.1 52.7a4.77 4.77 0 0 1 9.49 0v37a4.77 4.77 0 0 1-9.49 0v-37Zm23.73-.2a4.58 4.58 0 0 1 5-4.06 4.47 4.47 0 0 1 4.51 4.46l-2 37a4.57 4.57 0 0 1-5 4.06 4.47 4.47 0 0 1-4.51-4.46l2-37ZM25 61.7a4.46 4.46 0 0 1 4.5-4.46 4.58 4.58 0 0 1 5 4.06l2 37a4.47 4.47 0 0 1-4.51 4.46 4.57 4.57 0 0 1-5-4.06l-2-37Z\", 1, \"cls-trashcan-icon\"]],\n      template: function NgFlowchartConnectorComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, NgFlowchartConnectorComponent_div_0_Template, 9, 4, \"div\", 2);\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(1, \"svg\", 3)(2, \"defs\")(3, \"marker\", 4);\n          i0.ɵɵelement(4, \"path\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"marker\", 6);\n          i0.ɵɵelement(6, \"path\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"marker\", 7);\n          i0.ɵɵelement(8, \"path\", 5);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(9, \"g\", 8);\n          i0.ɵɵelement(10, \"path\", 9, 0)(12, \"path\", 10, 1);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.selected && !ctx.canvas.disabled);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction3(3, _c2, ctx.containerHeight + \"px\", ctx.containerWidth + \"px\", ctx.opacity))(\"ngClass\", i0.ɵɵpureFunction1(7, _c3, ctx.selected));\n        }\n      },\n      dependencies: [i1.NgClass, i1.NgIf, i1.NgStyle],\n      styles: [\"[_nghost-%COMP%]{position:relative;transition:all .2s;display:block}[_nghost-%COMP%]   #arrowPadding[_ngcontent-%COMP%]{pointer-events:auto}[_nghost-%COMP%]   #deleteIcon[_ngcontent-%COMP%]{height:12px;width:12px}.ngflowchart-canvas-content.scaling   [_nghost-%COMP%]{transition:none!important}.ngflowchart-connector-menu[_ngcontent-%COMP%]{position:absolute;z-index:5;pointer-events:none}.ngflowchart-connector-menu[_ngcontent-%COMP%]   .ngflowchart-delete-connector[_ngcontent-%COMP%]{display:flex;position:absolute;background-color:#fff;border:1px solid black;border-radius:3px;padding:2px;pointer-events:auto;cursor:pointer}.ngflowchart-connector[_ngcontent-%COMP%]{position:absolute;z-index:1;transition:all .2s;overflow:visible;pointer-events:none;stroke-dasharray:4,3;min-width:1px;cursor:pointer}.ngflowchart-connector[_ngcontent-%COMP%]:hover{z-index:3}.ngflowchart-connector[_ngcontent-%COMP%]:hover   #arrowpath[_ngcontent-%COMP%]{stroke:#000}.ngflowchart-connector.ngflowchart-connector-selected[_ngcontent-%COMP%]{z-index:4}.ngflowchart-connector.ngflowchart-connector-selected[_ngcontent-%COMP%]   #arrowpath[_ngcontent-%COMP%]{stroke:green}\"]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgFlowchartConnectorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng-flowchart-connector',\n      template: \"<div\\n  *ngIf=\\\"selected && !canvas.disabled\\\"\\n  class=\\\"ngflowchart-connector-menu\\\"\\n  [style.left.px]=\\\"deleteButtonPosition.x\\\"\\n  [style.top.px]=\\\"deleteButtonPosition.y\\\">\\n  <div (click)=\\\"deleteConnector($event)\\\" class=\\\"ngflowchart-delete-connector\\\">\\n    <svg\\n      xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n      id=\\\"deleteIcon\\\"\\n      viewBox=\\\"0 0 105.16 122.88\\\">\\n      <defs>\\n        <style>\\n          .cls-trashcan-icon {\\n            fill-rule: evenodd;\\n          }\\n        </style>\\n      </defs>\\n      <title>Delete</title>\\n      <path\\n        class=\\\"cls-trashcan-icon\\\"\\n        d=\\\"M11.17 37.16H94.65a8.4 8.4 0 0 1 2 .16 5.93 5.93 0 0 1 2.88 1.56 5.43 5.43 0 0 1 1.64 3.34 7.65 7.65 0 0 1-.06 1.44L94 117.31v0l0 .13 0 .28v0a7.06 7.06 0 0 1-.2.9v0l0 .06v0a5.89 5.89 0 0 1-5.47 4.07H17.32a6.17 6.17 0 0 1-1.25-.19 6.17 6.17 0 0 1-1.16-.48h0a6.18 6.18 0 0 1-3.08-4.88l-7-73.49a7.69 7.69 0 0 1-.06-1.66 5.37 5.37 0 0 1 1.63-3.29 6 6 0 0 1 3-1.58 8.94 8.94 0 0 1 1.79-.13ZM5.65 8.8H37.12V6h0a2.44 2.44 0 0 1 0-.27 6 6 0 0 1 1.76-4h0A6 6 0 0 1 43.09 0H62.46l.3 0a6 6 0 0 1 5.7 6V6h0V8.8h32l.39 0a4.7 4.7 0 0 1 4.31 4.43c0 .18 0 .32 0 .5v9.86a2.59 2.59 0 0 1-2.59 2.59H2.59A2.59 2.59 0 0 1 0 23.62V13.53H0a1.56 1.56 0 0 1 0-.31v0A4.72 4.72 0 0 1 3.88 8.88 10.4 10.4 0 0 1 5.65 8.8Zm42.1 52.7a4.77 4.77 0 0 1 9.49 0v37a4.77 4.77 0 0 1-9.49 0v-37Zm23.73-.2a4.58 4.58 0 0 1 5-4.06 4.47 4.47 0 0 1 4.51 4.46l-2 37a4.57 4.57 0 0 1-5 4.06 4.47 4.47 0 0 1-4.51-4.46l2-37ZM25 61.7a4.46 4.46 0 0 1 4.5-4.46 4.58 4.58 0 0 1 5 4.06l2 37a4.47 4.47 0 0 1-4.51 4.46 4.57 4.57 0 0 1-5-4.06l-2-37Z\\\" />\\n    </svg>\\n  </div>\\n</div>\\n<svg\\n  xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n  [ngStyle]=\\\"{\\n    height: containerHeight + 'px',\\n    width: containerWidth + 'px',\\n    opacity: opacity\\n  }\\\"\\n  class=\\\"ngflowchart-connector\\\"\\n  [ngClass]=\\\"{ 'ngflowchart-connector-selected': selected }\\\">\\n  <defs>\\n    <marker\\n      id=\\\"connectorArrowhead\\\"\\n      viewBox=\\\"0 0 10 10\\\"\\n      refX=\\\"8\\\"\\n      refY=\\\"5\\\"\\n      markerWidth=\\\"10\\\"\\n      markerHeight=\\\"10\\\"\\n      orient=\\\"auto\\\"\\n      markerUnits=\\\"userSpaceOnUse\\\"\\n      fill=\\\"grey\\\">\\n      <path d=\\\"M 0 0 L 10 5 L 0 10 z\\\" />\\n    </marker>\\n    <marker\\n      id=\\\"connectorArrowheadHover\\\"\\n      viewBox=\\\"0 0 10 10\\\"\\n      refX=\\\"8\\\"\\n      refY=\\\"5\\\"\\n      markerWidth=\\\"10\\\"\\n      markerHeight=\\\"10\\\"\\n      orient=\\\"auto\\\"\\n      markerUnits=\\\"userSpaceOnUse\\\"\\n      fill=\\\"black\\\">\\n      <path d=\\\"M 0 0 L 10 5 L 0 10 z\\\" />\\n    </marker>\\n    <marker\\n      id=\\\"connectorArrowheadSelected\\\"\\n      viewBox=\\\"0 0 10 10\\\"\\n      refX=\\\"8\\\"\\n      refY=\\\"5\\\"\\n      markerWidth=\\\"10\\\"\\n      markerHeight=\\\"10\\\"\\n      orient=\\\"auto\\\"\\n      markerUnits=\\\"userSpaceOnUse\\\"\\n      fill=\\\"green\\\">\\n      <path d=\\\"M 0 0 L 10 5 L 0 10 z\\\" />\\n    </marker>\\n  </defs>\\n  <g\\n    id=\\\"arrowpath\\\"\\n    fill=\\\"none\\\"\\n    stroke=\\\"grey\\\"\\n    stroke-width=\\\"2\\\"\\n    marker-end=\\\"url(#connectorArrowhead)\\\">\\n    <path id=\\\"arrow\\\" #arrow />\\n    <path\\n      id=\\\"arrowPadding\\\"\\n      #arrowPadding\\n      stroke-width=\\\"10\\\"\\n      stroke=\\\"transparent\\\"\\n      stroke-dasharray=\\\"none\\\" />\\n  </g>\\n</svg>\\n\",\n      styles: [\":host{position:relative;transition:all .2s;display:block}:host #arrowPadding{pointer-events:auto}:host #deleteIcon{height:12px;width:12px}.ngflowchart-canvas-content.scaling :host{transition:none!important}.ngflowchart-connector-menu{position:absolute;z-index:5;pointer-events:none}.ngflowchart-connector-menu .ngflowchart-delete-connector{display:flex;position:absolute;background-color:#fff;border:1px solid black;border-radius:3px;padding:2px;pointer-events:auto;cursor:pointer}.ngflowchart-connector{position:absolute;z-index:1;transition:all .2s;overflow:visible;pointer-events:none;stroke-dasharray:4,3;min-width:1px;cursor:pointer}.ngflowchart-connector:hover{z-index:3}.ngflowchart-connector:hover #arrowpath{stroke:#000}.ngflowchart-connector.ngflowchart-connector-selected{z-index:4}.ngflowchart-connector.ngflowchart-connector-selected #arrowpath{stroke:green}\\n\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }], {\n    canvas: [{\n      type: Input\n    }],\n    compRef: [{\n      type: Input\n    }],\n    connector: [{\n      type: Input\n    }],\n    arrow: [{\n      type: ViewChild,\n      args: ['arrow']\n    }],\n    arrowPadding: [{\n      type: ViewChild,\n      args: ['arrowPadding']\n    }],\n    autoPosition: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n    onDocumentClick: [{\n      type: HostListener,\n      args: ['document:mousedown', ['$event']]\n    }],\n    onMouseOver: [{\n      type: HostListener,\n      args: ['mouseover', ['$event.target']]\n    }],\n    onMouseOut: [{\n      type: HostListener,\n      args: ['mouseout', ['$event.target']]\n    }]\n  });\n})();\nclass OptionsService {\n  constructor() {\n    this._callbacks = {};\n    this._options = new NgFlowchart.Options();\n  }\n  setOptions(options) {\n    this._options = this.sanitizeOptions(options);\n  }\n  setCallbacks(callbacks) {\n    this._callbacks = callbacks;\n  }\n  get options() {\n    return this._options;\n  }\n  get callbacks() {\n    return this._callbacks;\n  }\n  sanitizeOptions(options) {\n    const defaultOpts = new NgFlowchart.Options();\n    options = {\n      ...defaultOpts,\n      ...options\n    };\n    options.stepGap = Math.max(options.stepGap, 20) || 40;\n    options.hoverDeadzoneRadius = Math.max(options.hoverDeadzoneRadius, 0) || 20;\n    if (options.zoom && options.zoom.mode !== 'DISABLED') {\n      options.zoom.defaultStep = options.zoom.defaultStep || 0.1;\n    }\n    return options;\n  }\n  static {\n    this.ɵfac = function OptionsService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || OptionsService)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: OptionsService,\n      factory: OptionsService.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OptionsService, [{\n    type: Injectable\n  }], () => [], null);\n})();\nclass NgFlowchartArrowComponent {\n  set position(pos) {\n    this._position = pos;\n    if (this.options.options.orientation === 'VERTICAL') {\n      this.isLeftFlowing = pos.start[0] > pos.end[0];\n      //in the case where steps are directly underneath we need some minimum width\n      this.containerWidth = Math.abs(pos.start[0] - pos.end[0]) + this.padding * 2;\n      this.containerLeft = Math.min(pos.start[0], pos.end[0]) - this.padding;\n      this.containerHeight = Math.abs(pos.start[1] - pos.end[1]);\n      this.containerTop = pos.start[1];\n    } else if (this.options.options.orientation === 'HORIZONTAL') {\n      this.isLeftFlowing = pos.start[1] < pos.end[1];\n      this.containerWidth = Math.abs(pos.start[0] - pos.end[0]);\n      this.containerLeft = pos.start[0];\n      //in the case where steps are directly underneath we need some minimum height\n      this.containerHeight = Math.abs(pos.start[1] - pos.end[1]) + this.padding * 2;\n      this.containerTop = Math.min(pos.start[1], pos.end[1]) - this.padding;\n    }\n    this.updatePath();\n  }\n  constructor(options) {\n    this.options = options;\n    this.opacity = 1;\n    this.containerWidth = 0;\n    this.containerHeight = 0;\n    this.containerLeft = 0;\n    this.containerTop = 0;\n    //to be applied on left and right edges\n    this.padding = 10;\n    this.isLeftFlowing = false;\n  }\n  ngOnInit() {}\n  ngAfterViewInit() {\n    this.updatePath();\n  }\n  hideArrow() {\n    this.opacity = 0.2;\n  }\n  showArrow() {\n    this.opacity = 1;\n  }\n  updatePath() {\n    if (!this.arrow?.nativeElement) {\n      return;\n    }\n    if (this.options.options.orientation === 'VERTICAL') {\n      if (this.isLeftFlowing) {\n        this.arrow.nativeElement.setAttribute('d', `\n        M${this.containerWidth - this.padding} 0 \n        L${this.containerWidth - this.padding} ${this.containerHeight / 2}\n        L${this.padding} ${this.containerHeight / 2}\n        L${this.padding} ${this.containerHeight - 4}\n      `);\n      } else {\n        this.arrow.nativeElement.setAttribute('d', `\n        M${this.padding} 0 \n        L${this.padding} ${this.containerHeight / 2}\n        L${this.containerWidth - this.padding} ${this.containerHeight / 2}\n        L${this.containerWidth - this.padding} ${this.containerHeight - 4}\n      `);\n      }\n    } else if (this.options.options.orientation === 'HORIZONTAL') {\n      if (this.isLeftFlowing) {\n        this.arrow.nativeElement.setAttribute('d', `\n        M0 ${this.padding}\n        L${this.containerWidth / 2} ${this.padding}\n        L${this.containerWidth / 2} ${this.containerHeight - this.padding}\n        L${this.containerWidth - 4} ${this.containerHeight - this.padding}\n      `);\n      } else {\n        this.arrow.nativeElement.setAttribute('d', `\n        M0 ${this.containerHeight - this.padding}\n        L${this.containerWidth / 2} ${this.containerHeight - this.padding}\n        L${this.containerWidth / 2} ${this.padding}\n        L${this.containerWidth - 4} ${this.padding}\n      `);\n      }\n    }\n  }\n  static {\n    this.ɵfac = function NgFlowchartArrowComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgFlowchartArrowComponent)(i0.ɵɵdirectiveInject('OptionsService'));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NgFlowchartArrowComponent,\n      selectors: [[\"ng-flowchart-arrow\"]],\n      viewQuery: function NgFlowchartArrowComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.arrow = _t.first);\n        }\n      },\n      inputs: {\n        position: \"position\"\n      },\n      standalone: false,\n      decls: 7,\n      vars: 7,\n      consts: [[\"arrow\", \"\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", 1, \"ngflowchart-arrow\", 3, \"ngStyle\"], [\"id\", \"arrowhead\", \"viewBox\", \"0 0 10 10\", \"refX\", \"3\", \"refY\", \"5\", \"markerWidth\", \"5\", \"markerHeight\", \"5\", \"orient\", \"auto\", \"fill\", \"grey\"], [\"d\", \"M 0 0 L 10 5 L 0 10 z\"], [\"id\", \"arrowpath\", \"fill\", \"none\", \"stroke\", \"grey\", \"stroke-width\", \"2\", \"marker-end\", \"url(#arrowhead)\"], [\"id\", \"arrow\"]],\n      template: function NgFlowchartArrowComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(0, \"svg\", 1)(1, \"defs\")(2, \"marker\", 2);\n          i0.ɵɵelement(3, \"path\", 3);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(4, \"g\", 4);\n          i0.ɵɵelement(5, \"path\", 5, 0);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction5(1, _c4, ctx.containerHeight + \"px\", ctx.containerWidth + \"px\", ctx.containerLeft + \"px\", ctx.containerTop + \"px\", ctx.opacity));\n        }\n      },\n      dependencies: [i1.NgStyle],\n      styles: [\"svg[_ngcontent-%COMP%]{position:absolute;z-index:0;transition:all .2s;pointer-events:none}\"]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgFlowchartArrowComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng-flowchart-arrow',\n      template: \"<svg\\n  xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n  [ngStyle]=\\\"{\\n    height: containerHeight + 'px',\\n    width: containerWidth + 'px',\\n    left: containerLeft + 'px',\\n    top: containerTop + 'px',\\n    opacity: opacity\\n  }\\\"\\n  class=\\\"ngflowchart-arrow\\\">\\n  <defs>\\n    <marker\\n      id=\\\"arrowhead\\\"\\n      viewBox=\\\"0 0 10 10\\\"\\n      refX=\\\"3\\\"\\n      refY=\\\"5\\\"\\n      markerWidth=\\\"5\\\"\\n      markerHeight=\\\"5\\\"\\n      orient=\\\"auto\\\"\\n      fill=\\\"grey\\\">\\n      <path d=\\\"M 0 0 L 10 5 L 0 10 z\\\" />\\n    </marker>\\n  </defs>\\n  <g\\n    id=\\\"arrowpath\\\"\\n    fill=\\\"none\\\"\\n    stroke=\\\"grey\\\"\\n    stroke-width=\\\"2\\\"\\n    marker-end=\\\"url(#arrowhead)\\\">\\n    <path id=\\\"arrow\\\" #arrow />\\n  </g>\\n</svg>\\n\",\n      styles: [\"svg{position:absolute;z-index:0;transition:all .2s;pointer-events:none}\\n\"]\n    }]\n  }], () => [{\n    type: OptionsService,\n    decorators: [{\n      type: Inject,\n      args: ['OptionsService']\n    }]\n  }], {\n    arrow: [{\n      type: ViewChild,\n      args: ['arrow']\n    }],\n    position: [{\n      type: Input\n    }]\n  });\n})();\nclass NgFlowchartPadArrowComponent {\n  set position(pos) {\n    this._position = pos;\n    this.containerWidth = Math.abs(pos.start[0] - pos.end[0]);\n    this.containerLeft = pos.start[0] > pos.end[0] ? -this.containerWidth + pos.root[0] : pos.root[0];\n    this.containerHeight = Math.abs(pos.start[1] - pos.end[1]);\n    this.containerTop = pos.start[1] > pos.end[1] ? -this.containerHeight + pos.root[1] : pos.root[1];\n    this.updatePath();\n  }\n  constructor(options) {\n    this.options = options;\n    this.opacity = 1;\n    this.containerWidth = 0;\n    this.containerHeight = 0;\n    this.containerLeft = 0;\n    this.containerTop = 0;\n  }\n  ngOnInit() {}\n  ngAfterViewInit() {\n    this.updatePath();\n  }\n  hideArrow() {\n    this.opacity = 0.2;\n  }\n  showArrow() {\n    this.opacity = 1;\n  }\n  updatePath() {\n    if (!this.arrow?.nativeElement) {\n      return;\n    }\n    const pos = this._position;\n    let start;\n    let end;\n    if (pos.start[1] > pos.end[1]) {\n      if (pos.start[0] > pos.end[0]) {\n        // top left\n        start = [this.containerWidth, this.containerHeight];\n        end = [0, 0];\n      } else {\n        //topright\n        start = [0, this.containerHeight];\n        end = [this.containerWidth, 0];\n      }\n    } else {\n      if (pos.start[0] > pos.end[0]) {\n        // bottom left\n        start = [this.containerWidth, 0];\n        end = [0, this.containerHeight];\n      } else {\n        //bottom right\n        start = [0, 0];\n        end = [this.containerWidth, this.containerHeight];\n      }\n    }\n    this.arrow.nativeElement.setAttribute('d', `\n        M${start[0]} ${start[1]}\n        L${end[0]} ${end[1]}\n      `);\n  }\n  static {\n    this.ɵfac = function NgFlowchartPadArrowComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgFlowchartPadArrowComponent)(i0.ɵɵdirectiveInject('OptionsService'));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NgFlowchartPadArrowComponent,\n      selectors: [[\"ng-flowchart-pad-arrow\"]],\n      viewQuery: function NgFlowchartPadArrowComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.arrow = _t.first);\n        }\n      },\n      inputs: {\n        position: \"position\"\n      },\n      standalone: false,\n      decls: 7,\n      vars: 7,\n      consts: [[\"arrow\", \"\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", 1, \"ngflowchart-pad-arrow\", 3, \"ngStyle\"], [\"id\", \"padarrowhead\", \"viewBox\", \"0 0 10 10\", \"refX\", \"8\", \"refY\", \"5\", \"markerWidth\", \"5\", \"markerHeight\", \"5\", \"orient\", \"auto\", \"fill\", \"black\"], [\"d\", \"M 0 0 L 10 5 L 0 10 z\"], [\"id\", \"arrowpath\", \"fill\", \"none\", \"stroke\", \"black\", \"stroke-width\", \"2\", \"marker-end\", \"url(#padarrowhead)\"], [\"id\", \"arrow\"]],\n      template: function NgFlowchartPadArrowComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(0, \"svg\", 1)(1, \"defs\")(2, \"marker\", 2);\n          i0.ɵɵelement(3, \"path\", 3);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(4, \"g\", 4);\n          i0.ɵɵelement(5, \"path\", 5, 0);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction5(1, _c4, ctx.containerHeight + \"px\", ctx.containerWidth + \"px\", ctx.containerLeft + \"px\", ctx.containerTop + \"px\", ctx.opacity));\n        }\n      },\n      dependencies: [i1.NgStyle],\n      styles: [\"svg[_ngcontent-%COMP%]{position:absolute;z-index:11;overflow:visible;pointer-events:none;min-width:5px;min-height:5px;stroke-dasharray:4,3}\"]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgFlowchartPadArrowComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng-flowchart-pad-arrow',\n      template: \"<svg\\n  xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n  [ngStyle]=\\\"{\\n    height: containerHeight + 'px',\\n    width: containerWidth + 'px',\\n    left: containerLeft + 'px',\\n    top: containerTop + 'px',\\n    opacity: opacity\\n  }\\\"\\n  class=\\\"ngflowchart-pad-arrow\\\">\\n  <defs>\\n    <marker\\n      id=\\\"padarrowhead\\\"\\n      viewBox=\\\"0 0 10 10\\\"\\n      refX=\\\"8\\\"\\n      refY=\\\"5\\\"\\n      markerWidth=\\\"5\\\"\\n      markerHeight=\\\"5\\\"\\n      orient=\\\"auto\\\"\\n      fill=\\\"black\\\">\\n      <path d=\\\"M 0 0 L 10 5 L 0 10 z\\\" />\\n    </marker>\\n  </defs>\\n  <g\\n    id=\\\"arrowpath\\\"\\n    fill=\\\"none\\\"\\n    stroke=\\\"black\\\"\\n    stroke-width=\\\"2\\\"\\n    marker-end=\\\"url(#padarrowhead)\\\">\\n    <path id=\\\"arrow\\\" #arrow />\\n  </g>\\n</svg>\\n\",\n      styles: [\"svg{position:absolute;z-index:11;overflow:visible;pointer-events:none;min-width:5px;min-height:5px;stroke-dasharray:4,3}\\n\"]\n    }]\n  }], () => [{\n    type: OptionsService,\n    decorators: [{\n      type: Inject,\n      args: ['OptionsService']\n    }]\n  }], {\n    arrow: [{\n      type: ViewChild,\n      args: ['arrow']\n    }],\n    position: [{\n      type: Input\n    }]\n  });\n})();\nclass DropDataService {\n  constructor() {}\n  setDragStep(ref) {\n    this.dragStep = ref;\n  }\n  getDragStep() {\n    return this.dragStep;\n  }\n  setDragConnector(ref) {\n    this.dragConnector = ref;\n  }\n  getDragConnector() {\n    return this.dragConnector;\n  }\n  static {\n    this.ɵfac = function DropDataService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DropDataService)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: DropDataService,\n      factory: DropDataService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropDataService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\nclass NgFlowchartConnectorPadComponent {\n  set position(pos) {\n    if (this.canvas.options.options.orientation === 'VERTICAL') {\n      this._position = [pos[0] - this.padRadius - this.strokeWidth / 2, pos[1]]; // center pad icon and y offset\n    } else if (this.canvas.options.options.orientation === 'HORIZONTAL') {\n      this._position = [pos[0], pos[1] - this.padRadius - this.strokeWidth / 2]; // center pad icon and y offset\n    }\n    this.setPosition();\n  }\n  onDragStart(e) {\n    if (e.button !== 0) return;\n    e.preventDefault();\n    this.data.setDragConnector(this.flowConnector);\n    this.element.nativeElement.classList.add('dragging');\n    this.movingPad = this.element.nativeElement.cloneNode(true);\n    this.movingPad.style.pointerEvents = 'none';\n    this.element.nativeElement.parentElement.append(this.movingPad);\n    document.addEventListener('mousemove', this.dragMove);\n    document.addEventListener('mouseup', this.dragEnd);\n  }\n  constructor(element, viewContainer, data) {\n    this.element = element;\n    this.viewContainer = viewContainer;\n    this.data = data;\n    this.padRadius = 5;\n    this.strokeWidth = 2;\n    this.hidden = false;\n    this.panEdgeSize = 50;\n    this.panTimer = null;\n    this.dragMove = this.dragMove.bind(this);\n    this.dragEnd = this.dragEnd.bind(this);\n  }\n  ngAfterViewInit() {\n    this.setPosition();\n  }\n  setPosition() {\n    this.element.nativeElement.style.left = `${this._position[0]}px`;\n    this.element.nativeElement.style.top = `${this._position[1]}px`;\n  }\n  drawArrow(start, end, root) {\n    if (!this.arrow) {\n      this.createArrow();\n    }\n    this.arrow.instance.position = {\n      start: start,\n      end: end,\n      root: root\n    };\n    this.arrow.changeDetectorRef.markForCheck();\n  }\n  createArrow() {\n    const injector = Injector.create({\n      providers: [{\n        provide: 'OptionsService',\n        useValue: this.canvas.options\n      }]\n    });\n    this.arrow = this.viewContainer.createComponent(NgFlowchartPadArrowComponent, {\n      injector: injector\n    });\n    this.element.nativeElement.appendChild(this.arrow.location.nativeElement);\n  }\n  dragMove(e, skipPan) {\n    e.preventDefault();\n    const canvasEle = this.canvas.viewContainer.element.nativeElement;\n    const canvasBounds = canvasEle.getBoundingClientRect();\n    const padBounds = this.connectorPad.nativeElement.getBoundingClientRect();\n    var startPos = this.canvas.scaleCoordinate([padBounds.left - canvasBounds.left, padBounds.top - canvasBounds.top]);\n    const padOffset = this.padRadius + this.strokeWidth / 2;\n    const left = e.clientX - canvasBounds.left;\n    const top = e.clientY - canvasBounds.top;\n    var endPos = this.canvas.scaleCoordinate([left, top]);\n    endPos[0] -= padOffset;\n    endPos[1] -= padOffset;\n    const scrollOffset = this.canvas.scaleCoordinate([canvasEle.scrollLeft, canvasEle.scrollTop]);\n    this.movingPad.style.left = endPos[0] + scrollOffset[0] + 'px';\n    this.movingPad.style.top = endPos[1] + scrollOffset[1] + 'px';\n    this.drawArrow(startPos, endPos, [padOffset, padOffset]);\n    if (!skipPan) {\n      this.edgePan(e, canvasBounds);\n    }\n  }\n  dragEnd(e) {\n    e.preventDefault();\n    if (e.button === 0) {\n      document.removeEventListener('mousemove', this.dragMove);\n      document.removeEventListener('mouseup', this.dragEnd);\n      this.element.nativeElement.classList.remove('dragging');\n      this.data.setDragConnector(null);\n      clearTimeout(this.panTimer);\n      if (this.arrow) {\n        this.arrow.destroy();\n        this.arrow = null;\n      }\n      if (this.movingPad) {\n        this.movingPad.remove();\n        this.movingPad = null;\n      }\n    }\n  }\n  edgePan(event, canvasBounds) {\n    // Get the viewport-relative coordinates of the mousemove event.\n    var viewportX = event.clientX;\n    var viewportY = event.clientY;\n    // Get the viewport dimensions.\n    var viewportWidth = canvasBounds.width;\n    var viewportHeight = canvasBounds.height;\n    // calculate the boundaries of the edge\n    var edgeTop = canvasBounds.top + this.panEdgeSize;\n    var edgeLeft = canvasBounds.left + this.panEdgeSize;\n    var edgeBottom = canvasBounds.height - this.panEdgeSize;\n    var edgeRight = canvasBounds.right - this.panEdgeSize;\n    var isInLeftEdge = viewportX < edgeLeft;\n    var isInRightEdge = viewportX > edgeRight;\n    var isInTopEdge = viewportY < edgeTop;\n    var isInBottomEdge = viewportY > edgeBottom;\n    if (!(isInLeftEdge || isInRightEdge || isInTopEdge || isInBottomEdge)) {\n      clearTimeout(this.panTimer);\n      return;\n    }\n    var canvasEle = this.canvas.viewContainer.element.nativeElement;\n    // Get the canvas dimensions.\n    var canvasWidth = Math.max(canvasEle.scrollWidth, canvasEle.offsetWidth, canvasEle.clientWidth);\n    var canvasHeight = Math.max(canvasEle.scrollHeight, canvasEle.offsetHeight, canvasEle.clientHeight);\n    // Calculate the maximum scroll offset in each direction.\n    var maxScrollX = canvasWidth - viewportWidth;\n    var maxScrollY = canvasHeight - viewportHeight;\n    const scope = this;\n    (function checkForCanvasScroll() {\n      clearTimeout(scope.panTimer);\n      if (adjustCanvasScroll()) {\n        scope.panTimer = setTimeout(checkForCanvasScroll, 30);\n        scope.dragMove(event, true);\n      }\n    })();\n    // Adjust the canvas scroll based on the user's mouse position. Returns True\n    // or False depending on whether or not the canvas scroll was changed.\n    function adjustCanvasScroll() {\n      // Get the current scroll position of the canvas.\n      var currentScrollX = canvasEle.scrollLeft;\n      var currentScrollY = canvasEle.scrollTop;\n      // Determine if the canvas can be scrolled in any particular direction.\n      var canScrollUp = currentScrollY > 0;\n      var canScrollDown = currentScrollY < maxScrollY;\n      var canScrollLeft = currentScrollX > 0;\n      var canScrollRight = currentScrollX < maxScrollX;\n      var nextScrollX = currentScrollX;\n      var nextScrollY = currentScrollY;\n      // control intensity of scroll\n      var maxStep = 30;\n      // Should we scroll left?\n      if (isInLeftEdge && canScrollLeft) {\n        var intensity = (edgeLeft - viewportX) / scope.panEdgeSize;\n        nextScrollX = nextScrollX - maxStep * intensity;\n        // Should we scroll right?\n      } else if (isInRightEdge && canScrollRight) {\n        var intensity = (viewportX - edgeRight) / scope.panEdgeSize;\n        nextScrollX = nextScrollX + maxStep * intensity;\n      }\n      // Should we scroll up?\n      if (isInTopEdge && canScrollUp) {\n        var intensity = (edgeTop - viewportY) / scope.panEdgeSize;\n        nextScrollY = nextScrollY - maxStep * intensity;\n        // Should we scroll down?\n      } else if (isInBottomEdge && canScrollDown) {\n        var intensity = (viewportY - edgeBottom) / scope.panEdgeSize;\n        nextScrollY = nextScrollY + maxStep * intensity;\n      }\n      // Sanitize invalid maximums.\n      nextScrollX = Math.max(0, Math.min(maxScrollX, nextScrollX));\n      nextScrollY = Math.max(0, Math.min(maxScrollY, nextScrollY));\n      if (nextScrollX !== currentScrollX || nextScrollY !== currentScrollY) {\n        canvasEle.scrollTo(nextScrollX, nextScrollY);\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }\n  static {\n    this.ɵfac = function NgFlowchartConnectorPadComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgFlowchartConnectorPadComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(DropDataService));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NgFlowchartConnectorPadComponent,\n      selectors: [[\"ng-flowchart-connector-pad\"]],\n      viewQuery: function NgFlowchartConnectorPadComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c5, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.connectorPad = _t.first);\n        }\n      },\n      hostBindings: function NgFlowchartConnectorPadComponent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"mousedown\", function NgFlowchartConnectorPadComponent_mousedown_HostBindingHandler($event) {\n            return ctx.onDragStart($event);\n          });\n        }\n      },\n      inputs: {\n        canvas: \"canvas\",\n        flowConnector: \"flowConnector\",\n        position: \"position\",\n        hidden: \"hidden\"\n      },\n      standalone: false,\n      decls: 1,\n      vars: 1,\n      consts: [[\"connectorPad\", \"\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"class\", \"ngflowchart-connector-pad\", 4, \"ngIf\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", 1, \"ngflowchart-connector-pad\"], [\"stroke\", \"grey\", \"fill\", \"none\"]],\n      template: function NgFlowchartConnectorPadComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, NgFlowchartConnectorPadComponent__svg_svg_0_Template, 3, 6, \"svg\", 1);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", !ctx.hidden && !ctx.canvas.disabled);\n        }\n      },\n      dependencies: [i1.NgIf],\n      styles: [\"[_nghost-%COMP%]{position:relative;z-index:10;display:block}[_nghost-%COMP%]:not(.dragging){transition:all .2s}.ngflowchart-connector-pad[_ngcontent-%COMP%]{position:absolute;cursor:crosshair}\"]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgFlowchartConnectorPadComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng-flowchart-connector-pad',\n      template: \"<svg\\n  #connectorPad\\n  *ngIf=\\\"!hidden && !canvas.disabled\\\"\\n  [attr.height]=\\\"padRadius * 2 + strokeWidth\\\"\\n  [attr.width]=\\\"padRadius * 2 + strokeWidth\\\"\\n  xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n  class=\\\"ngflowchart-connector-pad\\\">\\n  <circle\\n    [attr.cx]=\\\"padRadius + strokeWidth / 2\\\"\\n    [attr.cy]=\\\"padRadius + strokeWidth / 2\\\"\\n    [attr.r]=\\\"padRadius\\\"\\n    stroke=\\\"grey\\\"\\n    [attr.stroke-width]=\\\"strokeWidth\\\"\\n    fill=\\\"none\\\" />\\n</svg>\\n\",\n      styles: [\":host{position:relative;z-index:10;display:block}:host:not(.dragging){transition:all .2s}.ngflowchart-connector-pad{position:absolute;cursor:crosshair}\\n\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.ViewContainerRef\n  }, {\n    type: DropDataService\n  }], {\n    canvas: [{\n      type: Input\n    }],\n    flowConnector: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }],\n    connectorPad: [{\n      type: ViewChild,\n      args: ['connectorPad']\n    }],\n    hidden: [{\n      type: Input\n    }],\n    onDragStart: [{\n      type: HostListener,\n      args: ['mousedown', ['$event']]\n    }]\n  });\n})();\nclass NgFlowchartStepComponent {\n  onMoveStart(event) {\n    if (this.canvas.disabled) {\n      return;\n    }\n    //allow dragging steps in nested canvas\n    event.stopPropagation();\n    this.hideTree();\n    event.dataTransfer.setData('type', NgFlowchart.DropType.Step);\n    event.dataTransfer.setData('source', NgFlowchart.DropSource.Canvas);\n    event.dataTransfer.setData('id', this.nativeElement.id);\n    this.drop.dragStep = {\n      type: this.type,\n      data: this.data,\n      instance: this\n    };\n  }\n  onMoveEnd(event) {\n    this.showTree();\n  }\n  onMouseEnter(event) {\n    if (!this.canvas.options.options.manualConnectors) {\n      return;\n    }\n    if (this.drop.dragConnector && this.internalIsValidConnectorDropTarget()) {\n      this.nativeElement.classList.add('connector-target');\n    }\n  }\n  onMouseLeave(event) {\n    if (!this.canvas.options.options.manualConnectors) {\n      return;\n    }\n    this.nativeElement.classList.remove('connector-target');\n  }\n  onMouseUp(event) {\n    if (event.button !== 0 || !this.canvas.options.options.manualConnectors) {\n      return;\n    }\n    this.nativeElement.classList.remove('connector-target');\n    if (this.drop.dragConnector && this.internalIsValidConnectorDropTarget()) {\n      this.canvas.linkConnector(this.drop.dragConnector.startStepId, this.id);\n    }\n  }\n  constructor() {\n    this.viewInit = new EventEmitter();\n    this._currentPosition = [0, 0];\n    this._isHidden = false;\n    this._children = [];\n  }\n  init(drop, viewContainer) {\n    this.drop = drop;\n    this.viewContainer = viewContainer;\n  }\n  canDeleteStep() {\n    return true;\n  }\n  canDrop(dropEvent, error) {\n    return true;\n  }\n  shouldEvalDropHover(coords, stepToDrop) {\n    return true;\n  }\n  async onUpload(data) {}\n  getDropPositionsForStep(step) {\n    return ['BELOW', 'LEFT', 'RIGHT', 'ABOVE'];\n  }\n  isConnectorPadEnabled() {\n    //disable pad if sequential and has child/connection\n    return !(this.canvas.options.options.isSequential && (this.hasChildren() || this.canvas.flow.connectors.filter(c => c.connector.startStepId === this.id).length > 0));\n  }\n  isValidConnectorDropTarget() {\n    var canDropAbove = this.getDropPositionsForStep(this.drop.dragConnector).includes('ABOVE');\n    return canDropAbove;\n  }\n  ngOnInit() {}\n  ngAfterViewInit() {\n    if (!this.nativeElement) {\n      throw 'Missing canvasContent ViewChild. Be sure to add #canvasContent to your root html element.';\n    }\n    this.nativeElement.classList.add('ngflowchart-step-wrapper');\n    if (this.canvas.options.options.orientation === 'HORIZONTAL') {\n      this.nativeElement.classList.add('horizontal');\n    }\n    this.nativeElement.setAttribute('draggable', 'true');\n    if (this._initPosition) {\n      this.zsetPosition(this._initPosition);\n    }\n    //force id creation if not already there\n    this.nativeElement.id = this.id;\n    this.viewInit.emit();\n  }\n  get id() {\n    if (this._id == null) {\n      this._id = 's' + Date.now();\n    }\n    return this._id;\n  }\n  get currentPosition() {\n    return this._currentPosition;\n  }\n  /**\n   * Creates and adds a child to this step\n   * @param template The template or component type to create\n   * @param options Add options\n   */\n  async addChild(pending, options) {\n    let componentRef = await this.canvas.createStep(pending);\n    this.canvas.addToCanvas(componentRef);\n    if (options?.sibling) {\n      this.zaddChildSibling0(componentRef.instance, options?.index);\n    } else {\n      this.zaddChild0(componentRef.instance);\n    }\n    this.canvas.flow.addStep(componentRef.instance);\n    this.canvas.reRender();\n    return componentRef.instance;\n  }\n  /**\n   * Destroys this step component and updates all necessary child and parent relationships\n   * @param recursive\n   * @param checkCallbacks\n   */\n  destroy(recursive = true, checkCallbacks = true) {\n    if (!checkCallbacks || this.canDeleteStep()) {\n      this.canvas.options.callbacks.beforeDeleteStep && this.canvas.options.callbacks.beforeDeleteStep(this);\n      let parentIndex;\n      if (this._parent) {\n        parentIndex = this._parent.removeChild(this);\n      }\n      this.destroy0(parentIndex, recursive);\n      this.canvas.reRender();\n      this.canvas.options.callbacks.afterDeleteStep && this.canvas.options.callbacks.afterDeleteStep(this);\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Destroys connector(s) starting at this step\n   * @param endStepId optionally destroy only connector with specified endStepId\n   */\n  destroyConnectors(endStepId) {\n    const connectors = this.canvas.flow.connectors.filter(c => c.connector.startStepId === this.id && (!endStepId || c.connector.endStepId === endStepId));\n    for (const conn of connectors) {\n      conn.destroy0();\n    }\n  }\n  /**\n   * Remove a child from this step. Returns the index at which the child was found or -1 if not found.\n   * @param childToRemove Step component to remove\n   */\n  removeChild(childToRemove) {\n    if (!this.children) {\n      return -1;\n    }\n    const i = this.children.findIndex(child => child.id == childToRemove.id);\n    if (i > -1) {\n      this.children.splice(i, 1);\n    }\n    return i;\n  }\n  /**\n   * Re-parent this step\n   * @param newParent The new parent for this step\n   * @param force Force the re-parent if a parent already exists\n   */\n  setParent(newParent, force = false) {\n    if (this.parent && !force) {\n      console.warn('This child already has a parent, use force if you know what you are doing');\n      return;\n    }\n    this._parent = newParent;\n    if (!this._parent && this.arrow) {\n      this.arrow.destroy();\n      this.arrow = null;\n    }\n  }\n  /**\n   * Called when no longer trying to drop or move a step adjacent to this one\n   * @param position Position to render the icon\n   */\n  clearHoverIcons() {\n    this.nativeElement.removeAttribute(CONSTANTS.DROP_HOVER_ATTR);\n  }\n  /**\n   * Called when a step is trying to be dropped or moved adjacent to this step.\n   * @param position Position to render the icon\n   */\n  showHoverIcon(position) {\n    this.nativeElement.setAttribute(CONSTANTS.DROP_HOVER_ATTR, position.toLowerCase());\n  }\n  /**\n   * Is this the root element of the tree\n   */\n  isRootElement() {\n    return !this.parent;\n  }\n  /**\n   * Does this step have any children?\n   * @param count Optional count of children to check. Defaults to 1. I.E has at least 1 child.\n   */\n  hasChildren(count = 1) {\n    return this.children && this.children.length >= count;\n  }\n  /** Array of children steps for this step */\n  get children() {\n    return this._children;\n  }\n  /** The parent step of this step */\n  get parent() {\n    return this._parent;\n  }\n  /**\n   * Returns the total width extent (in pixels) of this node tree\n   * @param stepGap The current step gap for the flow canvas\n   */\n  getNodeTreeWidth(stepGap) {\n    const currentNodeWidth = this.nativeElement.getBoundingClientRect().width;\n    if (!this.hasChildren()) {\n      return this.nativeElement.getBoundingClientRect().width;\n    }\n    let childWidth = this._children.reduce((childTreeWidth, child) => {\n      return childTreeWidth += child.getNodeTreeWidth(stepGap);\n    }, 0);\n    childWidth += stepGap * (this._children.length - 1);\n    return Math.max(currentNodeWidth, childWidth);\n  }\n  /**\n   * Returns the total height extent (in pixels) of this node tree\n   * @param stepGap The current step gap for the flow canvas\n   */\n  getNodeTreeHeight(stepGap) {\n    const currentNodeHeight = this.nativeElement.getBoundingClientRect().height;\n    if (!this.hasChildren()) {\n      return this.nativeElement.getBoundingClientRect().height;\n    }\n    let childHeight = this._children.reduce((childTreeHeight, child) => {\n      return childTreeHeight += child.getNodeTreeHeight(stepGap);\n    }, 0);\n    childHeight += stepGap * (this._children.length - 1);\n    return Math.max(currentNodeHeight, childHeight);\n  }\n  /**\n   * Is this step currently hidden and unavailable as a drop location\n   */\n  isHidden() {\n    return this._isHidden;\n  }\n  /**\n   * Return current rect of this step. The position can be animated so getBoundingClientRect cannot\n   * be reliable for positions\n   * @param canvasRect Optional canvasRect to provide to offset the values\n   */\n  getCurrentRect(canvasRect) {\n    let clientRect = this.nativeElement.getBoundingClientRect();\n    return {\n      bottom: this._currentPosition[1] + clientRect.height + (canvasRect?.top || 0),\n      left: this._currentPosition[0] + (canvasRect?.left || 0),\n      height: clientRect.height,\n      width: clientRect.width,\n      right: this._currentPosition[0] + clientRect.width + (canvasRect?.left || 0),\n      top: this._currentPosition[1] + (canvasRect?.top || 0)\n    };\n  }\n  /**\n   * Returns the JSON representation of this flow step\n   */\n  toJSON() {\n    return {\n      id: this.id,\n      type: this.type,\n      data: this.data,\n      children: this.hasChildren() ? this._children.map(child => {\n        return child.toJSON();\n      }) : []\n    };\n  }\n  /** The native HTMLElement of this step */\n  get nativeElement() {\n    return this.view?.nativeElement;\n  }\n  setId(id) {\n    this._id = id;\n  }\n  zsetPosition(pos, offsetCenter = false) {\n    if (!this.view) {\n      console.warn('Trying to set position before view init');\n      //save pos and set in after view init\n      this._initPosition = [...pos];\n      return;\n    }\n    let adjustedX = Math.max(pos[0] - (offsetCenter ? this.nativeElement.offsetWidth / 2 : 0), 0);\n    let adjustedY = Math.max(pos[1] - (offsetCenter ? this.nativeElement.offsetHeight / 2 : 0), 0);\n    this.nativeElement.style.left = `${adjustedX}px`;\n    this.nativeElement.style.top = `${adjustedY}px`;\n    this._currentPosition = [adjustedX, adjustedY];\n  }\n  zaddChild0(newChild) {\n    let oldChildIndex = null;\n    if (newChild._parent) {\n      oldChildIndex = newChild._parent.removeChild(newChild);\n    }\n    if (this.hasChildren()) {\n      if (newChild.hasChildren()) {\n        //if we have children and the child has children we need to confirm the child doesnt have multiple children at any point\n        let newChildLastChild = newChild.findLastSingleChild();\n        if (!newChildLastChild) {\n          if (newChild._parent) {\n            newChild._parent.zaddChildSibling0(newChild, oldChildIndex);\n          }\n          console.error('Invalid move. A node cannot have multiple parents');\n          return false;\n        }\n        //move the this nodes children to last child of the step arg\n        newChildLastChild.setChildren(this._children.slice());\n      } else {\n        //move adjacent's children to newStep\n        newChild.setChildren(this._children.slice());\n      }\n    }\n    //finally reset this nodes children to the single new child\n    this.setChildren([newChild]);\n    return true;\n  }\n  zaddChildFromAbove0(newChild, newParent) {\n    let oldChildIndex = null;\n    if (newChild._parent) {\n      oldChildIndex = newChild._parent.removeChild(newChild);\n    }\n    let finalChild = this;\n    if (this.hasChildren()) {\n      //if we have children we need to confirm the child doesnt have multiple children at any point\n      const newChildLastChild = this.findLastSingleChild();\n      if (!newChildLastChild) {\n        if (newChild._parent) {\n          newChild._parent.zaddChildSibling0(newChild, oldChildIndex);\n        }\n        console.error('Invalid move. A node cannot have multiple parents');\n        return false;\n      } else {\n        finalChild = newChildLastChild;\n      }\n    }\n    //finally reset this nodes children to the single new child\n    finalChild.setChildren([newChild]);\n    if (newParent) {\n      newParent.zaddChildSibling0(this, oldChildIndex);\n    }\n    return true;\n  }\n  zaddChildSibling0(child, index) {\n    if (child._parent) {\n      child._parent.removeChild(child);\n    }\n    if (!this.children) {\n      this._children = [];\n    }\n    if (index == null) {\n      this.children.push(child);\n    } else {\n      this.children.splice(index, 0, child);\n    }\n    //since we are adding a new child here, it is safe to force set the parent\n    child.setParent(this, true);\n  }\n  zdrawArrow(start, end) {\n    if (!this.arrow) {\n      this.createArrow();\n    }\n    this.arrow.instance.position = {\n      start: start,\n      end: end\n    };\n  }\n  ////////////////////////\n  // PRIVATE IMPL\n  destroy0(parentIndex, recursive = true) {\n    this.compRef.destroy();\n    // remove from master array\n    this.canvas.flow.removeStep(this);\n    // remove all associated connectors\n    const connectors = this.canvas.flow.connectors.filter(c => c.connector.startStepId === this.id || c.connector.endStepId === this.id);\n    for (const conn of connectors) {\n      conn.destroy0();\n    }\n    if (this.isRootElement()) {\n      this.canvas.flow.rootStep = null;\n    }\n    if (this.hasChildren()) {\n      //this was the root node\n      if (this.isRootElement()) {\n        if (!recursive) {\n          let newRoot = this._children[0];\n          //set first child as new root\n          this.canvas.flow.rootStep = newRoot;\n          newRoot.setParent(null, true);\n          //make previous siblings children of the new root\n          if (this.hasChildren(2)) {\n            for (let i = 1; i < this._children.length; i++) {\n              let child = this._children[i];\n              child.setParent(newRoot, true);\n              newRoot._children.push(child);\n            }\n          }\n        }\n      }\n      //update children\n      let length = this._children.length;\n      for (let i = 0; i < length; i++) {\n        let child = this._children[i];\n        if (recursive) {\n          child.destroy0(null, true);\n        }\n        //not the original root node\n        else if (!!this._parent) {\n          this._parent._children.splice(i + parentIndex, 0, child);\n          child.setParent(this._parent, true);\n        }\n      }\n      this.setChildren([]);\n    }\n    this._parent = null;\n  }\n  createArrow() {\n    const injector = Injector.create({\n      providers: [{\n        provide: 'OptionsService',\n        useValue: this.canvas.options\n      }]\n    });\n    this.arrow = this.viewContainer.createComponent(NgFlowchartArrowComponent, {\n      injector\n    });\n    this.nativeElement.parentElement.appendChild(this.arrow.location.nativeElement);\n  }\n  hideTree() {\n    this._isHidden = true;\n    this.nativeElement.style.opacity = '.4';\n    if (this.arrow) {\n      this.arrow.instance.hideArrow();\n    }\n    if (this.hasChildren()) {\n      this._children.forEach(child => {\n        child.hideTree();\n      });\n    }\n  }\n  showTree() {\n    this._isHidden = false;\n    if (this.arrow) {\n      this.arrow.instance.showArrow();\n    }\n    this.nativeElement.style.opacity = '1';\n    if (this.hasChildren()) {\n      this._children.forEach(child => {\n        child.showTree();\n      });\n    }\n  }\n  findLastSingleChild() {\n    //two or more children means we have no single child\n    if (this.hasChildren(2)) {\n      return null;\n    }\n    //if one child.. keep going down the tree until we find no children or 2 or more\n    else if (this.hasChildren()) {\n      return this._children[0].findLastSingleChild();\n    }\n    //if no children then this is the last single child\n    else return this;\n  }\n  setChildren(children) {\n    this._children = children;\n    this.children.forEach(child => {\n      child.setParent(this, true);\n    });\n  }\n  createConnectorPad() {\n    this.connectorPad = this.viewContainer.createComponent(NgFlowchartConnectorPadComponent);\n    this.connectorPad.instance.flowConnector = {\n      startStepId: this.id,\n      endStepId: null\n    };\n    this.connectorPad.instance.canvas = this.canvas;\n    this.nativeElement.parentElement.appendChild(this.connectorPad.location.nativeElement);\n  }\n  drawConnectorPad(position) {\n    if (!this.connectorPad) {\n      this.createConnectorPad();\n    }\n    this.connectorPad.instance.position = position;\n    const hidePad = this.canvas.disabled || !this.isConnectorPadEnabled() || this.isRootElement();\n    this.connectorPad.instance.hidden = hidePad;\n  }\n  internalIsValidConnectorDropTarget() {\n    var isSameStep = this.drop.dragConnector.startStepId === this.id;\n    var connectorAlreadyExists = this.canvas.flow.connectors.some(c => c.connector.startStepId === this.drop.dragConnector.startStepId && c.connector.endStepId === this.id);\n    const stepAlreadyChild = this.canvas.flow.steps.find(s => s.id === this.drop.dragConnector.startStepId)?.children.find(c => c.id === this.id);\n    const stepsInSameCanvas = this.canvas.flow.steps.some(s => s.id === this.drop.dragConnector.startStepId) && this.canvas.flow.steps.some(s => s.id === this.id);\n    return !isSameStep && !connectorAlreadyExists && !stepAlreadyChild && stepsInSameCanvas && this.isValidConnectorDropTarget();\n  }\n  static {\n    this.ɵfac = function NgFlowchartStepComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgFlowchartStepComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NgFlowchartStepComponent,\n      selectors: [[\"ng-flowchart-step\"]],\n      viewQuery: function NgFlowchartStepComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c6, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.view = _t.first);\n        }\n      },\n      hostBindings: function NgFlowchartStepComponent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"dragstart\", function NgFlowchartStepComponent_dragstart_HostBindingHandler($event) {\n            return ctx.onMoveStart($event);\n          })(\"dragend\", function NgFlowchartStepComponent_dragend_HostBindingHandler($event) {\n            return ctx.onMoveEnd($event);\n          })(\"mouseenter\", function NgFlowchartStepComponent_mouseenter_HostBindingHandler($event) {\n            return ctx.onMouseEnter($event);\n          })(\"mouseleave\", function NgFlowchartStepComponent_mouseleave_HostBindingHandler($event) {\n            return ctx.onMouseLeave($event);\n          })(\"mouseup\", function NgFlowchartStepComponent_mouseup_HostBindingHandler($event) {\n            return ctx.onMouseUp($event);\n          });\n        }\n      },\n      inputs: {\n        data: \"data\",\n        type: \"type\",\n        canvas: \"canvas\",\n        compRef: \"compRef\",\n        contentTemplate: \"contentTemplate\"\n      },\n      outputs: {\n        viewInit: \"viewInit\"\n      },\n      standalone: false,\n      decls: 3,\n      vars: 8,\n      consts: [[\"canvasContent\", \"\"], [3, \"id\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n      template: function NgFlowchartStepComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 1, 0);\n          i0.ɵɵtemplate(2, NgFlowchartStepComponent_ng_container_2_Template, 1, 0, \"ng-container\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"id\", ctx.id);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.contentTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(6, _c8, i0.ɵɵpureFunction2(3, _c7, ctx.data, ctx.id)));\n        }\n      },\n      dependencies: [i1.NgTemplateOutlet],\n      styles: [\".ngflowchart-canvas{overflow:auto;display:flex}.ngflowchart-canvas .ngflowchart-canvas-content.scaling .ngflowchart-step-wrapper,.ngflowchart-canvas .ngflowchart-canvas-content.scaling svg,.ngflowchart-canvas .ngflowchart-canvas-content.scaling ng-flowchart-connector-pad{transition:none!important}.ngflowchart-canvas .ngflowchart-canvas-content{position:relative;min-height:100%;min-width:100%;flex:1 1 100%}.ngflowchart-canvas .ngflowchart-step-wrapper{height:auto;width:auto;position:absolute;box-sizing:border-box;transition:all .2s;cursor:grab}.ngflowchart-canvas .ngflowchart-step-wrapper[ngflowchart-drop-hover]:before{content:\\\"\\\";width:12px;height:12px;border-radius:100%;position:absolute;z-index:1;background:#8b0000}.ngflowchart-canvas .ngflowchart-step-wrapper[ngflowchart-drop-hover]:after{content:\\\"\\\";width:20px;height:20px;border-radius:100%;position:absolute;z-index:0;background:#c07b7b;animation:backgroundOpacity 2s linear infinite}.ngflowchart-canvas .ngflowchart-step-wrapper:not(.horizontal)[ngflowchart-drop-hover=above]:before,.ngflowchart-canvas .ngflowchart-step-wrapper:not(.horizontal)[ngflowchart-drop-hover=above]:after{top:0;right:50%;transform:translate(50%,-50%)}.ngflowchart-canvas .ngflowchart-step-wrapper:not(.horizontal)[ngflowchart-drop-hover=below]:before,.ngflowchart-canvas .ngflowchart-step-wrapper:not(.horizontal)[ngflowchart-drop-hover=below]:after{bottom:0;right:50%;transform:translate(50%,50%)}.ngflowchart-canvas .ngflowchart-step-wrapper:not(.horizontal)[ngflowchart-drop-hover=right]:before,.ngflowchart-canvas .ngflowchart-step-wrapper:not(.horizontal)[ngflowchart-drop-hover=right]:after{right:0;top:50%;transform:translate(50%,-50%)}.ngflowchart-canvas .ngflowchart-step-wrapper:not(.horizontal)[ngflowchart-drop-hover=left]:before,.ngflowchart-canvas .ngflowchart-step-wrapper:not(.horizontal)[ngflowchart-drop-hover=left]:after{left:0;top:50%;transform:translate(-50%,-50%)}.ngflowchart-canvas .ngflowchart-step-wrapper.horizontal[ngflowchart-drop-hover=above]:before,.ngflowchart-canvas .ngflowchart-step-wrapper.horizontal[ngflowchart-drop-hover=above]:after{left:0;top:50%;transform:translate(-50%,-50%)}.ngflowchart-canvas .ngflowchart-step-wrapper.horizontal[ngflowchart-drop-hover=below]:before,.ngflowchart-canvas .ngflowchart-step-wrapper.horizontal[ngflowchart-drop-hover=below]:after{right:0;top:50%;transform:translate(50%,-50%)}.ngflowchart-canvas .ngflowchart-step-wrapper.horizontal[ngflowchart-drop-hover=right]:before,.ngflowchart-canvas .ngflowchart-step-wrapper.horizontal[ngflowchart-drop-hover=right]:after{bottom:0;right:50%;transform:translate(50%,50%)}.ngflowchart-canvas .ngflowchart-step-wrapper.horizontal[ngflowchart-drop-hover=left]:before,.ngflowchart-canvas .ngflowchart-step-wrapper.horizontal[ngflowchart-drop-hover=left]:after{top:0;right:50%;transform:translate(50%,-50%)}@keyframes backgroundOpacity{0%{opacity:.8}50%{opacity:.3}to{opacity:.8}}.ngflowchart-canvas .ngflowchart-step-wrapper.connector-target{box-shadow:0 0 4px 1px green}\\n\"],\n      encapsulation: 2\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgFlowchartStepComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng-flowchart-step',\n      encapsulation: ViewEncapsulation.None,\n      template: \"<div #canvasContent [id]=\\\"id\\\">\\n  <ng-container\\n    *ngTemplateOutlet=\\\"\\n      contentTemplate;\\n      context: {\\n        $implicit: {\\n          data: data,\\n          id: id\\n        }\\n      }\\n    \\\">\\n  </ng-container>\\n</div>\\n\",\n      styles: [\".ngflowchart-canvas{overflow:auto;display:flex}.ngflowchart-canvas .ngflowchart-canvas-content.scaling .ngflowchart-step-wrapper,.ngflowchart-canvas .ngflowchart-canvas-content.scaling svg,.ngflowchart-canvas .ngflowchart-canvas-content.scaling ng-flowchart-connector-pad{transition:none!important}.ngflowchart-canvas .ngflowchart-canvas-content{position:relative;min-height:100%;min-width:100%;flex:1 1 100%}.ngflowchart-canvas .ngflowchart-step-wrapper{height:auto;width:auto;position:absolute;box-sizing:border-box;transition:all .2s;cursor:grab}.ngflowchart-canvas .ngflowchart-step-wrapper[ngflowchart-drop-hover]:before{content:\\\"\\\";width:12px;height:12px;border-radius:100%;position:absolute;z-index:1;background:#8b0000}.ngflowchart-canvas .ngflowchart-step-wrapper[ngflowchart-drop-hover]:after{content:\\\"\\\";width:20px;height:20px;border-radius:100%;position:absolute;z-index:0;background:#c07b7b;animation:backgroundOpacity 2s linear infinite}.ngflowchart-canvas .ngflowchart-step-wrapper:not(.horizontal)[ngflowchart-drop-hover=above]:before,.ngflowchart-canvas .ngflowchart-step-wrapper:not(.horizontal)[ngflowchart-drop-hover=above]:after{top:0;right:50%;transform:translate(50%,-50%)}.ngflowchart-canvas .ngflowchart-step-wrapper:not(.horizontal)[ngflowchart-drop-hover=below]:before,.ngflowchart-canvas .ngflowchart-step-wrapper:not(.horizontal)[ngflowchart-drop-hover=below]:after{bottom:0;right:50%;transform:translate(50%,50%)}.ngflowchart-canvas .ngflowchart-step-wrapper:not(.horizontal)[ngflowchart-drop-hover=right]:before,.ngflowchart-canvas .ngflowchart-step-wrapper:not(.horizontal)[ngflowchart-drop-hover=right]:after{right:0;top:50%;transform:translate(50%,-50%)}.ngflowchart-canvas .ngflowchart-step-wrapper:not(.horizontal)[ngflowchart-drop-hover=left]:before,.ngflowchart-canvas .ngflowchart-step-wrapper:not(.horizontal)[ngflowchart-drop-hover=left]:after{left:0;top:50%;transform:translate(-50%,-50%)}.ngflowchart-canvas .ngflowchart-step-wrapper.horizontal[ngflowchart-drop-hover=above]:before,.ngflowchart-canvas .ngflowchart-step-wrapper.horizontal[ngflowchart-drop-hover=above]:after{left:0;top:50%;transform:translate(-50%,-50%)}.ngflowchart-canvas .ngflowchart-step-wrapper.horizontal[ngflowchart-drop-hover=below]:before,.ngflowchart-canvas .ngflowchart-step-wrapper.horizontal[ngflowchart-drop-hover=below]:after{right:0;top:50%;transform:translate(50%,-50%)}.ngflowchart-canvas .ngflowchart-step-wrapper.horizontal[ngflowchart-drop-hover=right]:before,.ngflowchart-canvas .ngflowchart-step-wrapper.horizontal[ngflowchart-drop-hover=right]:after{bottom:0;right:50%;transform:translate(50%,50%)}.ngflowchart-canvas .ngflowchart-step-wrapper.horizontal[ngflowchart-drop-hover=left]:before,.ngflowchart-canvas .ngflowchart-step-wrapper.horizontal[ngflowchart-drop-hover=left]:after{top:0;right:50%;transform:translate(50%,-50%)}@keyframes backgroundOpacity{0%{opacity:.8}50%{opacity:.3}to{opacity:.8}}.ngflowchart-canvas .ngflowchart-step-wrapper.connector-target{box-shadow:0 0 4px 1px green}\\n\"]\n    }]\n  }], () => [], {\n    onMoveStart: [{\n      type: HostListener,\n      args: ['dragstart', ['$event']]\n    }],\n    onMoveEnd: [{\n      type: HostListener,\n      args: ['dragend', ['$event']]\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter', ['$event']]\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave', ['$event']]\n    }],\n    onMouseUp: [{\n      type: HostListener,\n      args: ['mouseup', ['$event']]\n    }],\n    view: [{\n      type: ViewChild,\n      args: ['canvasContent']\n    }],\n    data: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    canvas: [{\n      type: Input\n    }],\n    compRef: [{\n      type: Input\n    }],\n    viewInit: [{\n      type: Output\n    }],\n    contentTemplate: [{\n      type: Input\n    }]\n  });\n})();\nclass CanvasRendererService {\n  constructor(options, cdr) {\n    this.options = options;\n    this.cdr = cdr;\n    this.scale = 1;\n    this.scaleDebounceTimer = null;\n  }\n  init(viewContainer) {\n    this.viewContainer = viewContainer;\n  }\n  renderRoot(step, dragEvent) {\n    this.getCanvasContentElement().appendChild(step.location.nativeElement);\n    this.setRootPosition(step.instance, dragEvent);\n    this.cdr.markForCheck();\n  }\n  renderNonRoot(step, dragEvent) {\n    this.getCanvasContentElement().appendChild(step.location.nativeElement);\n    this.cdr.markForCheck();\n  }\n  renderConnector(connector) {\n    this.getCanvasContentElement().appendChild(connector.location.nativeElement);\n    this.cdr.markForCheck();\n  }\n  updatePosition(step, dragEvent) {\n    let relativeXY = this.getRelativeXY(dragEvent);\n    relativeXY = relativeXY.map(coord => coord / this.scale);\n    step.zsetPosition(relativeXY, true);\n  }\n  getStepGap() {\n    return this.options.options.stepGap;\n  }\n  renderVerticalChildTree(rootNode, rootRect, canvasRect) {\n    //the rootNode passed in is already rendered. just need to render its children /subtree\n    if (!rootNode.hasChildren()) {\n      return;\n    }\n    const rootBottom = rootRect.top - canvasRect.top + rootRect.height / this.scale;\n    //top of the child row is simply the relative bottom of the root + stepGap\n    const childYTop = rootBottom + this.getStepGap();\n    const rootWidth = rootRect.width / this.scale;\n    const rootXCenter = rootRect.left - canvasRect.left + rootWidth / 2;\n    //get the width of the child trees\n    let childTreeWidths = {};\n    let totalTreeWidth = 0;\n    rootNode.children.forEach(child => {\n      let totalChildWidth = child.getNodeTreeWidth(this.getStepGap() * this.scale);\n      totalChildWidth = totalChildWidth / this.scale;\n      childTreeWidths[child.nativeElement.id] = totalChildWidth;\n      totalTreeWidth += totalChildWidth;\n    });\n    //add length for stepGaps between child trees\n    totalTreeWidth += (rootNode.children.length - 1) * this.getStepGap();\n    //if we have more than 1 child, we want half the extent on the left and half on the right\n    let leftXTree = rootXCenter - totalTreeWidth / 2;\n    // dont allow it to go negative since you cant scroll that way\n    leftXTree = Math.max(0, leftXTree);\n    rootNode.children.forEach(child => {\n      let childExtent = childTreeWidths[child.nativeElement.id];\n      let childLeft = leftXTree + childExtent / 2 - child.nativeElement.offsetWidth / 2;\n      child.zsetPosition([childLeft, childYTop]);\n      const currentChildRect = child.getCurrentRect(canvasRect);\n      const childWidth = currentChildRect.width / this.scale;\n      child.zdrawArrow([rootXCenter, rootBottom], [currentChildRect.left + childWidth / 2 - canvasRect.left, currentChildRect.top - canvasRect.top]);\n      this.renderVerticalChildTree(child, currentChildRect, canvasRect);\n      leftXTree += childExtent + this.getStepGap();\n    });\n  }\n  renderHorizontalChildTree(rootNode, rootRect, canvasRect) {\n    //the rootNode passed in is already rendered. just need to render its children /subtree\n    if (!rootNode.hasChildren()) {\n      return;\n    }\n    const rootRight = rootRect.left - canvasRect.left + rootRect.width / this.scale;\n    //top of the child row is simply the relative Right of the root + stepGap\n    const childXLeft = rootRight + this.getStepGap();\n    const rootHeight = rootRect.height / this.scale;\n    const rootYCenter = rootRect.top - canvasRect.top + rootHeight / 2;\n    //get the width of the child trees\n    let childTreeHeights = {};\n    let totalTreeHeight = 0;\n    rootNode.children.forEach(child => {\n      let totalChildHeight = child.getNodeTreeHeight(this.getStepGap() * this.scale);\n      totalChildHeight = totalChildHeight / this.scale;\n      childTreeHeights[child.nativeElement.id] = totalChildHeight;\n      totalTreeHeight += totalChildHeight;\n    });\n    //add length for stepGaps between child trees\n    totalTreeHeight += (rootNode.children.length - 1) * this.getStepGap();\n    //if we have more than 1 child, we want half the extent on the left and half on the right\n    let topYTree = rootYCenter - totalTreeHeight / 2;\n    // dont allow it to go negative since you cant scroll that way\n    topYTree = Math.max(0, topYTree);\n    rootNode.children.forEach(child => {\n      let childExtent = childTreeHeights[child.nativeElement.id];\n      let childTop = topYTree + childExtent / 2 - child.nativeElement.offsetHeight / 2;\n      child.zsetPosition([childXLeft, childTop]);\n      const currentChildRect = child.getCurrentRect(canvasRect);\n      const childHeight = currentChildRect.height / this.scale;\n      child.zdrawArrow([rootRight, rootYCenter], [currentChildRect.left - canvasRect.left, currentChildRect.top + childHeight / 2 - canvasRect.top]);\n      this.renderHorizontalChildTree(child, currentChildRect, canvasRect);\n      topYTree += childExtent + this.getStepGap();\n    });\n  }\n  render(flow, pretty, skipAdjustDimensions) {\n    if (!flow.hasRoot()) {\n      if (this.options.options.zoom.mode === 'DISABLED') {\n        this.resetAdjustDimensions();\n        // Trigger afterRender to allow nested canvas to redraw parent canvas.\n        // Not sure if this scenario should also trigger beforeRender.\n        if (this.options.callbacks?.afterRender) {\n          this.options.callbacks.afterRender();\n        }\n      }\n      return;\n    }\n    if (this.options.callbacks?.beforeRender) {\n      this.options.callbacks.beforeRender();\n    }\n    const canvasRect = this.getCanvasContentElement().getBoundingClientRect();\n    if (pretty) {\n      //this will place the root at the top center of the canvas and render from there\n      this.setRootPosition(flow.rootStep, null);\n    }\n    if (this.options.options.orientation === 'VERTICAL') {\n      this.renderVerticalChildTree(flow.rootStep, flow.rootStep.getCurrentRect(canvasRect), canvasRect);\n    } else if (this.options.options.orientation === 'HORIZONTAL') {\n      this.renderHorizontalChildTree(flow.rootStep, flow.rootStep.getCurrentRect(canvasRect), canvasRect);\n    }\n    if (this.options.options.manualConnectors) {\n      this.drawConnectorPads(flow, canvasRect);\n      this.drawConnectors(flow, canvasRect);\n    }\n    if (!skipAdjustDimensions && this.options.options.zoom.mode === 'DISABLED') {\n      this.adjustDimensions(flow, canvasRect);\n    }\n    this.cdr.markForCheck();\n    if (this.options.callbacks?.afterRender) {\n      this.options.callbacks.afterRender();\n    }\n  }\n  resetAdjustDimensions() {\n    // reset canvas auto sizing to original size if empty\n    if (this.viewContainer) {\n      const canvasWrapper = this.getCanvasContentElement();\n      canvasWrapper.style.minWidth = null;\n      canvasWrapper.style.minHeight = null;\n    }\n  }\n  findDropLocationForHover(absMouseXY, targetStep, stepToDrop) {\n    if (!targetStep.shouldEvalDropHover(absMouseXY, stepToDrop)) {\n      return 'deadzone';\n    }\n    const stepRect = targetStep.nativeElement.getBoundingClientRect();\n    const yStepCenter = stepRect.bottom - stepRect.height / 2;\n    const xStepCenter = stepRect.left + stepRect.width / 2;\n    const yDiff = absMouseXY[1] - yStepCenter;\n    const xDiff = absMouseXY[0] - xStepCenter;\n    const absYDistance = Math.abs(yDiff);\n    const absXDistance = Math.abs(xDiff);\n    //#math class #Pythagoras\n    const distance = Math.sqrt(absYDistance * absYDistance + absXDistance * absXDistance);\n    const accuracyRadius = (stepRect.height + stepRect.width) / 2;\n    let result = null;\n    if (distance < accuracyRadius) {\n      if (distance < this.options.options.hoverDeadzoneRadius) {\n        //basically we are too close to the middle to accurately predict what position they want\n        result = 'deadzone';\n      }\n      if (this.options.options.orientation === 'VERTICAL') {\n        if (absYDistance > absXDistance) {\n          result = {\n            step: targetStep,\n            position: yDiff > 0 ? 'BELOW' : 'ABOVE',\n            proximity: absYDistance\n          };\n        } else if (!this.options.options.isSequential && !targetStep.isRootElement()) {\n          result = {\n            step: targetStep,\n            position: xDiff > 0 ? 'RIGHT' : 'LEFT',\n            proximity: absXDistance\n          };\n        }\n      } else if (this.options.options.orientation === 'HORIZONTAL') {\n        if (absXDistance > absYDistance) {\n          result = {\n            step: targetStep,\n            position: xDiff > 0 ? 'BELOW' : 'ABOVE',\n            proximity: absXDistance\n          };\n        } else if (!this.options.options.isSequential && !targetStep.isRootElement()) {\n          result = {\n            step: targetStep,\n            position: yDiff > 0 ? 'RIGHT' : 'LEFT',\n            proximity: absYDistance\n          };\n        }\n      }\n    }\n    if (result && result !== 'deadzone') {\n      if (!targetStep.getDropPositionsForStep(stepToDrop).includes(result.position)) {\n        //we had a valid drop but the target step doesnt allow this location\n        result = null;\n      }\n    }\n    return result;\n  }\n  adjustDimensions(flow, canvasRect) {\n    let maxRight = 0;\n    let maxBottom = 0;\n    //TODO this can be better\n    flow.steps.forEach(ele => {\n      let rect = ele.getCurrentRect(canvasRect);\n      maxRight = Math.max(rect.right, maxRight);\n      maxBottom = Math.max(rect.bottom, maxBottom);\n    });\n    const widthBorderGap = this.getStepGap() / this.scale;\n    const widthDiff = canvasRect.width / this.scale - (maxRight - canvasRect.left + widthBorderGap);\n    if (widthDiff < -this.getStepGap()) {\n      //grow x\n      let growWidth = Math.abs(widthDiff);\n      if (growWidth > this.getStepGap()) {\n        this.getCanvasContentElement().style.minWidth = `${canvasRect.width / this.scale + growWidth + this.getStepGap()}px`;\n        if (this.options.options.orientation === 'VERTICAL' && this.options.options.centerOnResize) {\n          this.render(flow, true, true);\n        }\n      }\n    } else if (widthDiff > this.getStepGap()) {\n      //shrink x\n      if (this.isNestedCanvas()) {\n        const shrinkWidth = this.options.options.orientation === 'VERTICAL' ? widthDiff * 2 : widthDiff;\n        this.getCanvasContentElement().style.minWidth = `${canvasRect.width / this.scale - shrinkWidth}px`;\n        if (this.options.options.orientation === 'VERTICAL' && this.options.options.centerOnResize) {\n          this.render(flow, true, true);\n        }\n      } else if (this.getCanvasContentElement().style.minWidth) {\n        // reset normal canvas width if auto width set\n        this.getCanvasContentElement().style.minWidth = null;\n        if (this.options.options.orientation === 'VERTICAL' && this.options.options.centerOnResize) {\n          this.render(flow, true, true);\n        }\n      }\n    }\n    let heightBorderGap = this.getStepGap() / this.scale;\n    const heightDiff = canvasRect.height / this.scale - (maxBottom - canvasRect.top + heightBorderGap);\n    if (heightDiff < -this.getStepGap()) {\n      //grow y\n      let growHeight = Math.abs(heightDiff);\n      if (growHeight > this.getStepGap()) {\n        this.getCanvasContentElement().style.minHeight = `${canvasRect.height / this.scale + growHeight}px`;\n        if (this.options.options.orientation === 'HORIZONTAL' && this.options.options.centerOnResize) {\n          this.render(flow, true, true);\n        }\n      }\n    } else if (heightDiff > this.getStepGap()) {\n      //shrink y\n      if (this.isNestedCanvas()) {\n        const shrinkHeight = this.options.options.orientation === 'HORIZONTAL' ? heightDiff * 2 : heightDiff;\n        this.getCanvasContentElement().style.minHeight = `${canvasRect.height / this.scale - shrinkHeight}px`;\n        if (this.options.options.orientation === 'HORIZONTAL' && this.options.options.centerOnResize) {\n          this.render(flow, true, true);\n        }\n      } else if (this.getCanvasContentElement().style.minHeight) {\n        // reset normal canvas height if auto height set\n        this.getCanvasContentElement().style.minHeight = null;\n        if (this.options.options.orientation === 'HORIZONTAL' && this.options.options.centerOnResize) {\n          this.render(flow, true, true);\n        }\n      }\n    }\n  }\n  findBestMatchForSteps(dragStep, event, steps) {\n    const absXY = [event.clientX, event.clientY];\n    let bestMatch = null;\n    for (let i = 0; i < steps.length; i++) {\n      const step = steps[i];\n      if (step.isHidden()) {\n        continue;\n      }\n      const position = this.findDropLocationForHover(absXY, step, dragStep);\n      if (position) {\n        if (position == 'deadzone') {\n          bestMatch = null;\n          break;\n        }\n        //if this step is closer than previous best match then we have a new best\n        else if (bestMatch == null || bestMatch.proximity > position.proximity) {\n          bestMatch = position;\n        }\n      }\n    }\n    return bestMatch;\n  }\n  findAndShowClosestDrop(dragStep, event, steps) {\n    if (!steps || steps.length == 0) {\n      return;\n    }\n    let bestMatch = this.findBestMatchForSteps(dragStep, event, steps);\n    // TODO make this more efficient. two loops\n    steps.forEach(step => {\n      if (bestMatch == null || step.nativeElement.id !== bestMatch.step.nativeElement.id) {\n        step.clearHoverIcons();\n      }\n    });\n    if (!bestMatch) {\n      return;\n    }\n    bestMatch.step.showHoverIcon(bestMatch.position);\n    return {\n      step: bestMatch.step,\n      position: bestMatch.position\n    };\n  }\n  showSnaps(dragStep) {}\n  clearAllSnapIndicators(steps) {\n    steps.forEach(step => step.clearHoverIcons());\n  }\n  setRootPosition(step, dragEvent) {\n    if (!dragEvent) {\n      const canvasTop = this.getCanvasTopCenterPosition(step.nativeElement);\n      step.zsetPosition(canvasTop, true);\n      return;\n    }\n    switch (this.options.options.rootPosition) {\n      case 'CENTER':\n        const canvasCenter = this.getCanvasCenterPosition();\n        step.zsetPosition(canvasCenter, true);\n        return;\n      case 'TOP_CENTER':\n        const canvasTop = this.getCanvasTopCenterPosition(step.nativeElement);\n        step.zsetPosition(canvasTop, true);\n        return;\n      default:\n        const relativeXY = this.getRelativeXY(dragEvent);\n        step.zsetPosition(relativeXY, true);\n        return;\n    }\n  }\n  getRelativeXY(dragEvent) {\n    const canvasRect = this.getCanvasContentElement().getBoundingClientRect();\n    return [dragEvent.clientX - canvasRect.left, dragEvent.clientY - canvasRect.top];\n  }\n  getCanvasTopCenterPosition(htmlRootElement) {\n    const canvasRect = this.getCanvasContentElement().getBoundingClientRect();\n    const edgeMargin = this.getStepGap() * this.scale;\n    if (this.options.options.orientation === 'VERTICAL') {\n      const rootElementTop = htmlRootElement.getBoundingClientRect().height;\n      const topCoord = rootElementTop / 2 + edgeMargin;\n      const scaleTopOffset = (1 - this.scale) * 100;\n      return [canvasRect.width / (this.scale * 2), topCoord + scaleTopOffset];\n    } else if (this.options.options.orientation === 'HORIZONTAL') {\n      const rootElementRight = htmlRootElement.getBoundingClientRect().width;\n      const rightCoord = rootElementRight / 2 + edgeMargin;\n      const scaleRightOffset = (1 - this.scale) * 100;\n      return [rightCoord + scaleRightOffset, canvasRect.height / (this.scale * 2)];\n    }\n  }\n  getCanvasCenterPosition() {\n    const canvasRect = this.getCanvasContentElement().getBoundingClientRect();\n    return [canvasRect.width / 2, canvasRect.height / 2];\n  }\n  getCanvasContentElement() {\n    const canvas = this.viewContainer.element.nativeElement;\n    let canvasContent = canvas.getElementsByClassName(CONSTANTS.CANVAS_CONTENT_CLASS).item(0);\n    return canvasContent;\n  }\n  isNestedCanvas() {\n    if (this.viewContainer) {\n      const canvasWrapper = this.viewContainer.element.nativeElement.parentElement;\n      if (canvasWrapper) {\n        return canvasWrapper.classList.contains('ngflowchart-step-wrapper');\n      }\n    }\n    return false;\n  }\n  resetScale(flow) {\n    this.setScale(flow, 1);\n  }\n  scaleUp(flow, step) {\n    const newScale = this.scale + this.scale * (step || this.options.options.zoom.defaultStep);\n    this.setScale(flow, newScale);\n  }\n  scaleDown(flow, step) {\n    const newScale = this.scale - this.scale * (step || this.options.options.zoom.defaultStep);\n    this.setScale(flow, newScale);\n  }\n  setScale(flow, scaleValue) {\n    const minDimAdjust = `${1 / scaleValue * 100}%`;\n    const canvasContent = this.getCanvasContentElement();\n    canvasContent.style.transform = `scale(${scaleValue})`;\n    canvasContent.style.minHeight = minDimAdjust;\n    canvasContent.style.minWidth = minDimAdjust;\n    canvasContent.style.transformOrigin = 'top left';\n    canvasContent.classList.add('scaling');\n    this.scale = scaleValue;\n    if (!this.options.options.zoom.skipRender) {\n      this.render(flow, true);\n    }\n    if (this.options.callbacks?.afterScale) {\n      this.options.callbacks.afterScale(this.scale);\n    }\n    this.scaleDebounceTimer && clearTimeout(this.scaleDebounceTimer);\n    this.scaleDebounceTimer = setTimeout(() => {\n      canvasContent.classList.remove('scaling');\n    }, 300);\n  }\n  setNestedScale(scaleValue) {\n    this.scale = scaleValue;\n  }\n  drawConnectors(flow, canvasRect) {\n    for (const conn of flow.connectors) {\n      const startStep = flow.steps.find(s => s.id === conn.connector.startStepId);\n      const startStepRect = startStep.getCurrentRect(canvasRect);\n      let startStepPos;\n      if (this.options.options.orientation === 'VERTICAL') {\n        startStepPos = [startStepRect.left - canvasRect.left + startStepRect.width / this.scale * (2 / 3), startStepRect.top - canvasRect.top + startStepRect.height / this.scale];\n      } else if (this.options.options.orientation === 'HORIZONTAL') {\n        startStepPos = [startStepRect.left - canvasRect.left + startStepRect.width / this.scale, startStepRect.top - canvasRect.top + startStepRect.height / this.scale * (1 / 5)];\n      }\n      const endStep = flow.steps.find(s => s.id === conn.connector.endStepId);\n      const endStepRect = endStep.getCurrentRect();\n      const closestEndEdge = this.findClosestEndEdge(startStepPos, endStepRect);\n      conn.autoPosition = {\n        start: startStepPos,\n        end: closestEndEdge\n      };\n    }\n  }\n  drawConnectorPads(flow, canvasRect) {\n    for (const step of flow.steps) {\n      const stepRect = step.getCurrentRect(canvasRect);\n      let padX;\n      let padY;\n      if (this.options.options.orientation === 'VERTICAL') {\n        padX = stepRect.left - canvasRect.left + stepRect.width / this.scale * (2 / 3);\n        padY = stepRect.top - canvasRect.top + stepRect.height / this.scale;\n      } else if (this.options.options.orientation === 'HORIZONTAL') {\n        padX = stepRect.left - canvasRect.left + stepRect.width / this.scale;\n        padY = stepRect.top - canvasRect.top + stepRect.height / this.scale * (1 / 5);\n      }\n      step.drawConnectorPad([padX, padY]);\n    }\n  }\n  findClosestEndEdge(startPos, stepRect) {\n    let sides;\n    let scaledHeight = stepRect.height / this.scale;\n    let scaledWidth = stepRect.width / this.scale;\n    if (this.options.options.orientation === 'VERTICAL') {\n      sides = [[stepRect.left, stepRect.top + scaledHeight / 2],\n      //left\n      [stepRect.left + scaledWidth * (1 / 5), stepRect.top],\n      //top\n      [stepRect.left + scaledWidth * (2 / 5), stepRect.top],\n      //top\n      [stepRect.left + scaledWidth * (3 / 5), stepRect.top],\n      //top\n      [stepRect.left + scaledWidth * (4 / 5), stepRect.top],\n      //top\n      [stepRect.left + scaledWidth, stepRect.top + scaledHeight / 2] //right\n      ];\n    } else if (this.options.options.orientation === 'HORIZONTAL') {\n      sides = [[stepRect.left, stepRect.top + scaledHeight * (1 / 4)],\n      //left\n      [stepRect.left, stepRect.top + scaledHeight * (3 / 4)],\n      //left\n      [stepRect.left + scaledWidth * (1 / 5), stepRect.top],\n      //top\n      [stepRect.left + scaledWidth * (2 / 5), stepRect.top],\n      //top\n      [stepRect.left + scaledWidth * (3 / 5), stepRect.top],\n      //top\n      [stepRect.left + scaledWidth * (4 / 5), stepRect.top],\n      //top\n      [stepRect.left + scaledWidth * (1 / 5), stepRect.top + scaledHeight],\n      //bottom\n      [stepRect.left + scaledWidth * (2 / 5), stepRect.top + scaledHeight],\n      //bottom\n      [stepRect.left + scaledWidth * (3 / 5), stepRect.top + scaledHeight],\n      //bottom\n      [stepRect.left + scaledWidth * (4 / 5), stepRect.top + scaledHeight] //bottom\n      ];\n    }\n    const closest = sides.reduce((closest, current) => {\n      const absXDistance = Math.abs(startPos[0] - current[0]);\n      const absYDistance = Math.abs(startPos[1] - current[1]);\n      const distance = Math.sqrt(absXDistance * absXDistance + absYDistance * absYDistance);\n      if (!closest.pos || distance < closest.distance) {\n        return {\n          pos: current,\n          distance\n        };\n      }\n      return closest;\n    }, {\n      pos: null,\n      distance: null\n    });\n    return closest.pos;\n  }\n  scaleCoordinate(pos) {\n    return [pos[0] / this.scale, pos[1] / this.scale];\n  }\n  static {\n    this.ɵfac = function CanvasRendererService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CanvasRendererService)(i0.ɵɵinject(OptionsService), i0.ɵɵinject(i0.ChangeDetectorRef));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: CanvasRendererService,\n      factory: CanvasRendererService.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CanvasRendererService, [{\n    type: Injectable\n  }], () => [{\n    type: OptionsService\n  }, {\n    type: i0.ChangeDetectorRef\n  }], null);\n})();\nclass NgFlowchartStepRegistry {\n  constructor() {\n    this.registry = new Map();\n  }\n  /**\n   * Register a step implementation. Only needed if you are uploading a flow from json\n   * @param type The unique type of the step\n   * @param step The step templateRef or component type to create for this key\n   */\n  registerStep(type, step) {\n    this.registry.set(type, step);\n  }\n  getStepImpl(type) {\n    return this.registry.get(type);\n  }\n  static {\n    this.ɵfac = function NgFlowchartStepRegistry_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgFlowchartStepRegistry)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgFlowchartStepRegistry,\n      factory: NgFlowchartStepRegistry.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgFlowchartStepRegistry, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\n\n/**\n * This service handles adding new steps to the canvas\n */\nclass StepManagerService {\n  constructor(registry) {\n    this.registry = registry;\n  }\n  init(viewContainer) {\n    this.viewContainer = viewContainer;\n  }\n  createFromRegistry(id, type, data, canvas) {\n    let templateComp = this.registry.getStepImpl(type);\n    let compRef;\n    if (templateComp instanceof TemplateRef || templateComp instanceof Type) {\n      compRef = this.create({\n        template: templateComp,\n        type: type,\n        data: data\n      }, canvas);\n    } else {\n      throw 'Invalid registry implementation found for type ' + type;\n    }\n    compRef.instance.setId(id);\n    return compRef;\n  }\n  create(pendingStep, canvas) {\n    let componentRef;\n    if (pendingStep.template instanceof TemplateRef) {\n      componentRef = this.viewContainer.createComponent(NgFlowchartStepComponent);\n      componentRef.instance.contentTemplate = pendingStep.template;\n    } else {\n      componentRef = this.viewContainer.createComponent(pendingStep.template);\n    }\n    componentRef.instance.data = JSON.parse(JSON.stringify(pendingStep.data));\n    componentRef.instance.type = pendingStep.type;\n    componentRef.instance.canvas = canvas;\n    componentRef.instance.compRef = componentRef;\n    componentRef.instance.init(componentRef.injector.get(DropDataService), componentRef.injector.get(ViewContainerRef));\n    return componentRef;\n  }\n  static {\n    this.ɵfac = function StepManagerService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || StepManagerService)(i0.ɵɵinject(NgFlowchartStepRegistry));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: StepManagerService,\n      factory: StepManagerService.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StepManagerService, [{\n    type: Injectable\n  }], () => [{\n    type: NgFlowchartStepRegistry\n  }], null);\n})();\nclass CanvasFlow {\n  hasRoot() {\n    return !!this.rootStep;\n  }\n  addStep(step) {\n    this._steps.push(step);\n  }\n  removeStep(step) {\n    let index = this._steps.findIndex(ele => ele.id == step.id);\n    if (index >= 0) {\n      this._steps.splice(index, 1);\n    }\n  }\n  addConnector(comp) {\n    this._connectors.push(comp);\n  }\n  removeConnector(comp) {\n    let index = this._connectors.findIndex(ele => ele.connector.startStepId === comp.connector.startStepId && ele.connector.endStepId === comp.connector.endStepId);\n    if (index >= 0) {\n      this._connectors.splice(index, 1);\n    }\n  }\n  get steps() {\n    return this._steps;\n  }\n  get connectors() {\n    return this._connectors;\n  }\n  constructor() {\n    // steps from this canvas only\n    this._steps = [];\n    this._connectors = [];\n  }\n}\nclass NgFlowchartCanvasService {\n  get disabled() {\n    return this._disabled;\n  }\n  constructor(drag, options, renderer, stepmanager, cdr) {\n    this.drag = drag;\n    this.options = options;\n    this.renderer = renderer;\n    this.stepmanager = stepmanager;\n    this.cdr = cdr;\n    this.isDragging = false;\n    this.flow = new CanvasFlow();\n    this._disabled = false;\n    this.noParentError = {\n      code: 'NO_PARENT',\n      message: 'Step was not dropped under a parent and is not the root node'\n    };\n  }\n  init(view) {\n    this.viewContainer = view;\n    this.renderer.init(view);\n    this.stepmanager.init(view);\n    //hack to load the css\n    let ref = this.stepmanager.create({\n      template: NgFlowchartStepComponent,\n      type: '',\n      data: null\n    }, this);\n    const i = this.viewContainer.indexOf(ref.hostView);\n    this.viewContainer.remove(i);\n  }\n  moveStep(drag, id) {\n    this.renderer.clearAllSnapIndicators(this.flow.steps);\n    let step = this.flow.steps.find(step => step.nativeElement.id === id);\n    let error = {};\n    if (!step) {\n      // step cannot be moved if not in this canvas\n      return;\n    }\n    if (step.canDrop(this.currentDropTarget, error)) {\n      if (step.isRootElement()) {\n        this.renderer.updatePosition(step, drag);\n        this.renderer.render(this.flow);\n      } else if (this.currentDropTarget) {\n        const response = this.addStepToFlow(step, this.currentDropTarget, true);\n        this.renderer.render(this.flow, response.prettyRender);\n      } else {\n        this.moveError(step, this.noParentError);\n      }\n      if (this.options.callbacks?.onDropStep && (this.currentDropTarget || step.isRootElement())) {\n        this.options.callbacks.onDropStep({\n          isMove: true,\n          step: step,\n          parent: step.parent\n        });\n      }\n    } else {\n      this.moveError(step, error);\n    }\n  }\n  async onDrop(drag) {\n    this.renderer.clearAllSnapIndicators(this.flow.steps);\n    if (this.flow.hasRoot() && !this.currentDropTarget) {\n      this.dropError(this.noParentError);\n      return;\n    }\n    //TODO just pass dragStep here, but come up with a better name and move the type to flow.model\n    let componentRef = await this.createStep(this.drag.dragStep);\n    const dropTarget = this.currentDropTarget || null;\n    let error = {};\n    if (componentRef.instance.canDrop(dropTarget, error)) {\n      if (!this.flow.hasRoot()) {\n        this.renderer.renderRoot(componentRef, drag);\n        this.setRoot(componentRef.instance);\n      } else {\n        // if root is replaced by another step, rerender root to proper position\n        if (dropTarget.step.isRootElement() && dropTarget.position === 'ABOVE') {\n          this.renderer.renderRoot(componentRef, drag);\n        }\n        this.addChildStep(componentRef, dropTarget);\n      }\n      if (this.options.callbacks?.onDropStep) {\n        this.options.callbacks.onDropStep({\n          step: componentRef.instance,\n          isMove: false,\n          parent: componentRef.instance.parent\n        });\n      }\n    } else {\n      const i = this.viewContainer.indexOf(componentRef.hostView);\n      this.viewContainer.remove(i);\n      this.dropError(error);\n    }\n  }\n  onDragStart(drag) {\n    this.isDragging = true;\n    this.currentDropTarget = this.renderer.findAndShowClosestDrop(this.drag.dragStep, drag, this.flow.steps);\n  }\n  createStepFromType(id, type, data) {\n    let compRef = this.stepmanager.createFromRegistry(id, type, data, this);\n    return new Promise(resolve => {\n      let sub = compRef.instance.viewInit.subscribe(async () => {\n        sub.unsubscribe();\n        setTimeout(() => {\n          compRef.instance.onUpload(data);\n        });\n        resolve(compRef);\n      });\n    });\n  }\n  createStep(pending) {\n    let componentRef;\n    componentRef = this.stepmanager.create(pending, this);\n    return new Promise(resolve => {\n      let sub = componentRef.instance.viewInit.subscribe(() => {\n        sub.unsubscribe();\n        resolve(componentRef);\n      }, error => console.error(error));\n    });\n  }\n  resetScale() {\n    if (this.options.options.zoom.mode === 'DISABLED') {\n      return;\n    }\n    this.renderer.resetScale(this.flow);\n  }\n  scaleUp(step) {\n    if (this.options.options.zoom.mode === 'DISABLED') {\n      return;\n    }\n    this.renderer.scaleUp(this.flow, step);\n  }\n  scaleDown(step) {\n    if (this.options.options.zoom.mode === 'DISABLED') {\n      return;\n    }\n    this.renderer.scaleDown(this.flow, step);\n  }\n  setScale(scaleValue) {\n    if (this.options.options.zoom.mode === 'DISABLED') {\n      return;\n    }\n    this.renderer.setScale(this.flow, scaleValue);\n  }\n  setNestedScale(scaleValue) {\n    this.renderer.setNestedScale(scaleValue);\n  }\n  addChildStep(componentRef, dropTarget) {\n    this.addToCanvas(componentRef);\n    const response = this.addStepToFlow(componentRef.instance, dropTarget);\n    this.renderer.render(this.flow, response.prettyRender);\n  }\n  addToCanvas(componentRef) {\n    this.renderer.renderNonRoot(componentRef);\n  }\n  reRender(pretty) {\n    this.renderer.render(this.flow, pretty);\n  }\n  async upload(root, connectors) {\n    await new Promise(res => setTimeout(res));\n    this.cdr.markForCheck();\n    await this.uploadNode(root);\n    this.uploadConnectors(connectors);\n    this.reRender(true);\n  }\n  uploadConnectors(connector) {\n    if (!connector || !this.options.options.manualConnectors) {\n      return;\n    }\n    for (const conn of connector) {\n      var connComponent = this.createConnector(conn);\n      this.renderer.renderConnector(connComponent);\n      this.flow.addConnector(connComponent.instance);\n    }\n  }\n  async uploadNode(node, parentNode) {\n    if (!node) {\n      // no node to upload when uploading empty nested flow\n      return;\n    }\n    let comp = await this.createStepFromType(node.id, node.type, node.data);\n    if (!parentNode) {\n      this.setRoot(comp.instance);\n      this.renderer.renderRoot(comp, null);\n    } else {\n      this.renderer.renderNonRoot(comp);\n      this.flow.addStep(comp.instance);\n    }\n    for (let i = 0; i < node.children.length; i++) {\n      let child = node.children[i];\n      let childComp = await this.uploadNode(child, comp.instance);\n      comp.instance.children.push(childComp);\n      childComp.setParent(comp.instance, true);\n    }\n    return comp.instance;\n  }\n  setRoot(step, force = true) {\n    if (this.flow.hasRoot()) {\n      if (!force) {\n        console.warn('Already have a root and force is false');\n        return false;\n      }\n      //reparent root\n      let oldRoot = this.flow.rootStep;\n      const success = step.zaddChildFromAbove0(oldRoot, null);\n      if (!success) return false;\n      this.flow.rootStep = step;\n    } else {\n      this.flow.rootStep = step;\n    }\n    this.flow.addStep(step);\n    return true;\n  }\n  addStepToFlow(step, dropTarget, isMove = false) {\n    let response = {\n      added: false,\n      prettyRender: false\n    };\n    switch (dropTarget.position) {\n      case 'ABOVE':\n        response = this.placeStepAbove(step, dropTarget.step);\n        break;\n      case 'BELOW':\n        response = this.placeStepBelow(step, dropTarget.step);\n        break;\n      case 'LEFT':\n        response = this.placeStepAdjacent(step, dropTarget.step, true);\n        break;\n      case 'RIGHT':\n        response = this.placeStepAdjacent(step, dropTarget.step, false);\n        break;\n      default:\n        break;\n    }\n    if (!isMove && response.added) {\n      this.flow.addStep(step);\n    }\n    return response;\n  }\n  placeStepBelow(newStep, parentStep) {\n    return {\n      added: parentStep.zaddChild0(newStep),\n      prettyRender: false\n    };\n  }\n  placeStepAdjacent(newStep, siblingStep, isLeft = true) {\n    if (siblingStep.parent) {\n      //find the adjacent steps index in the parents child array\n      const adjacentIndex = siblingStep.parent.children.findIndex(child => child.nativeElement.id == siblingStep.nativeElement.id);\n      siblingStep.parent.zaddChildSibling0(newStep, adjacentIndex + (isLeft ? 0 : 1));\n    } else {\n      console.warn('Parallel actions must have a common parent');\n      return {\n        added: false,\n        prettyRender: false\n      };\n    }\n    return {\n      added: true,\n      prettyRender: false\n    };\n  }\n  placeStepAbove(newStep, childStep) {\n    let success = true;\n    let prettyRender = false;\n    let newParent = childStep.parent;\n    if (newParent) {\n      success = newStep.zaddChildFromAbove0(childStep, newParent);\n    } else {\n      // new root node\n      const oldStepParent = newStep.parent;\n      const oldChildIndex = newStep.parent?.removeChild(newStep);\n      newStep.setParent(null, true);\n      //if the new step was a direct child of the root step, we need to break that connection\n      childStep.removeChild(newStep);\n      success = this.setRoot(newStep);\n      if (success) {\n        prettyRender = true;\n      } else {\n        // if setRoot fails reset to original state\n        oldStepParent.zaddChildSibling0(newStep, oldChildIndex);\n      }\n    }\n    return {\n      added: success,\n      prettyRender\n    };\n  }\n  dropError(error) {\n    if (this.options.callbacks?.onDropError) {\n      let parent = this.currentDropTarget?.position !== 'BELOW' ? this.currentDropTarget?.step.parent : this.currentDropTarget?.step;\n      this.options.callbacks.onDropError({\n        step: this.drag.dragStep,\n        parent: parent || null,\n        error: error\n      });\n    }\n  }\n  moveError(step, error) {\n    if (this.options.callbacks?.onMoveError) {\n      let parent = this.currentDropTarget?.position !== 'BELOW' ? this.currentDropTarget?.step.parent : this.currentDropTarget?.step;\n      this.options.callbacks.onMoveError({\n        step: {\n          instance: step,\n          type: step.type,\n          data: step.data\n        },\n        parent: parent,\n        error: error\n      });\n    }\n  }\n  linkConnector(startStepId, endStepId) {\n    if (!this.options.options.manualConnectors) {\n      return;\n    }\n    //connection can't be to self\n    var isSameStep = startStepId === endStepId;\n    //no duplicate connections\n    const isExistingConn = this.flow.connectors.some(c => c.connector.startStepId === startStepId && c.connector.endStepId === endStepId);\n    //nested canvas doesn't yet support connectors cross canvas\n    const stepsInSameCanvas = this.flow.steps.some(s => s.id === startStepId) && this.flow.steps.some(s => s.id === endStepId);\n    //step is already connected by normal step child\n    const stepAlreadyChild = this.flow.steps.find(s => s.id === startStepId)?.children.find(c => c.id === endStepId);\n    if (!isSameStep && !isExistingConn && stepsInSameCanvas && !stepAlreadyChild) {\n      var connector = {\n        startStepId: startStepId,\n        endStepId: endStepId\n      };\n      var connComponent = this.createConnector(connector);\n      this.renderer.renderConnector(connComponent);\n      this.flow.addConnector(connComponent.instance);\n      this.renderer.render(this.flow);\n      this.options.callbacks.onLinkConnector && this.options.callbacks.onLinkConnector(connector);\n    }\n  }\n  createConnector(connector) {\n    var component = this.viewContainer.createComponent(NgFlowchartConnectorComponent);\n    component.instance.connector = connector;\n    component.instance.canvas = this;\n    component.instance.compRef = component;\n    return component;\n  }\n  scaleCoordinate(pos) {\n    return this.renderer.scaleCoordinate(pos);\n  }\n  static {\n    this.ɵfac = function NgFlowchartCanvasService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgFlowchartCanvasService)(i0.ɵɵinject(DropDataService), i0.ɵɵinject(OptionsService), i0.ɵɵinject(CanvasRendererService), i0.ɵɵinject(StepManagerService), i0.ɵɵinject(i0.ChangeDetectorRef));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgFlowchartCanvasService,\n      factory: NgFlowchartCanvasService.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgFlowchartCanvasService, [{\n    type: Injectable\n  }], () => [{\n    type: DropDataService\n  }, {\n    type: OptionsService\n  }, {\n    type: CanvasRendererService\n  }, {\n    type: StepManagerService\n  }, {\n    type: i0.ChangeDetectorRef\n  }], null);\n})();\nclass NgFlowchartCanvasDirective {\n  onDrop(event) {\n    if (this._disabled) {\n      return;\n    }\n    // its possible multiple canvases exist so make sure we only move/drop on the closest one\n    const closestCanvasToTarget = event.target.closest(`.${CONSTANTS.CANVAS_CLASS}`);\n    if (closestCanvasToTarget !== this.canvasEle.nativeElement) {\n      return;\n    }\n    const type = event.dataTransfer.getData('type');\n    if (type === NgFlowchart.DropType.Step) {\n      const source = event.dataTransfer.getData('source');\n      if (NgFlowchart.DropSource.Canvas == source) {\n        this.canvas.moveStep(event, event.dataTransfer.getData('id'));\n      } else if (NgFlowchart.DropSource.Palette == source) {\n        this.canvas.onDrop(event);\n      }\n    }\n  }\n  onDragOver(event) {\n    event.preventDefault();\n    if (this._disabled) {\n      return;\n    }\n    this.canvas.onDragStart(event);\n  }\n  onZoom(event) {\n    if (this._options.zoom.mode === 'WHEEL') {\n      this.adjustWheelScale(event);\n    }\n  }\n  canvasDragScroll(e) {\n    var validDragAnchor = e.target === this.canvasContent || e.target === this.canvasEle.nativeElement;\n    const validLeftClick = this.options.dragScroll.includes('LEFT') && validDragAnchor && e.button === 0;\n    const validOther = this.options.dragScroll.includes('MIDDLE') && e.button === 1 || this.options.dragScroll.includes('RIGHT') && e.button === 2;\n    const scrollable = this.canvasEle.nativeElement.scrollWidth > this.canvasEle.nativeElement.clientWidth || this.canvasEle.nativeElement.scrollHeight > this.canvasEle.nativeElement.clientHeight;\n    if (scrollable && (validLeftClick || validOther)) {\n      e.preventDefault();\n      e.stopPropagation();\n      this.pos = {\n        // The current scroll\n        left: this.canvasEle.nativeElement.scrollLeft,\n        top: this.canvasEle.nativeElement.scrollTop,\n        // Get the current mouse position\n        x: e.clientX,\n        y: e.clientY\n      };\n      document.addEventListener('mousemove', this.mouseMoveHandler);\n      document.addEventListener('mouseup', this.mouseUpHandler);\n    }\n  }\n  onContextMenu(e) {\n    if (this.options.dragScroll.includes('RIGHT')) {\n      e.preventDefault();\n    }\n  }\n  set ngFlowchartCallbacks(callbacks) {\n    this.optionService.setCallbacks(callbacks);\n  }\n  set ngFlowchartOptions(options) {\n    this.optionService.setOptions(options);\n    this._options = this.optionService.options;\n    this.canvas.reRender();\n  }\n  get options() {\n    return this._options;\n  }\n  set disabled(val) {\n    this._disabled = val !== false;\n    if (this.canvas) {\n      this.canvas._disabled = this._disabled;\n    }\n  }\n  get disabled() {\n    return this._disabled;\n  }\n  constructor(canvasEle, viewContainer, canvas, optionService) {\n    this.canvasEle = canvasEle;\n    this.viewContainer = viewContainer;\n    this.canvas = canvas;\n    this.optionService = optionService;\n    this.pos = {\n      top: 0,\n      left: 0,\n      x: 0,\n      y: 0\n    };\n    this._disabled = false;\n    this._id = null;\n    this.canvasEle.nativeElement.classList.add(CONSTANTS.CANVAS_CLASS);\n    this.canvasContent = this.createCanvasContent(this.viewContainer);\n    this._id = this.canvasContent.id;\n    this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n    this.mouseUpHandler = this.mouseUpHandler.bind(this);\n  }\n  ngOnInit() {\n    this.canvas.init(this.viewContainer);\n    if (!this._options) {\n      this.ngFlowchartOptions = new NgFlowchart.Options();\n    }\n    this.canvas._disabled = this._disabled;\n    this.handleWindowResize();\n  }\n  ngAfterViewInit() {}\n  ngOnDestroy() {\n    for (let i = 0; i < this.viewContainer.length; i++) {\n      this.viewContainer.remove(i);\n    }\n    this.canvasEle.nativeElement.remove();\n    this.viewContainer.element.nativeElement.remove();\n    this.viewContainer = undefined;\n    this.windowResizeSubscription.unsubscribe();\n  }\n  handleWindowResize() {\n    this.windowResizeSubscription = fromEvent(window, 'resize').pipe(debounceTime(100)).subscribe(() => {\n      if (this._options.centerOnResize) {\n        this.canvas.reRender(true);\n      }\n    });\n  }\n  createCanvasContent(viewContainer) {\n    const canvasId = 'c' + Date.now();\n    let canvasEle = viewContainer.element.nativeElement;\n    let canvasContent = document.createElement('div');\n    canvasContent.id = canvasId;\n    canvasContent.classList.add(CONSTANTS.CANVAS_CONTENT_CLASS);\n    canvasEle.appendChild(canvasContent);\n    return canvasContent;\n  }\n  /**\n   * Returns the Flow object representing this flow chart.\n   */\n  getFlow() {\n    return new NgFlowchart.Flow(this.canvas);\n  }\n  scaleDown() {\n    this.canvas.scaleDown();\n  }\n  scaleUp() {\n    this.canvas.scaleUp();\n  }\n  setScale(scaleValue) {\n    const scaleVal = Math.max(0, scaleValue);\n    this.canvas.setScale(scaleVal);\n  }\n  setNestedScale(scaleValue) {\n    const scaleVal = Math.max(0, scaleValue);\n    this.canvas.setNestedScale(scaleVal);\n  }\n  adjustWheelScale(event) {\n    if (this.canvas.flow.hasRoot()) {\n      event.preventDefault();\n      // scale down / zoom out\n      if (event.deltaY > 0) {\n        this.scaleDown();\n      }\n      // scale up / zoom in\n      else if (event.deltaY < 0) {\n        this.scaleUp();\n      }\n    }\n  }\n  mouseMoveHandler(e) {\n    // How far the mouse has been moved\n    const dx = e.clientX - this.pos.x;\n    const dy = e.clientY - this.pos.y;\n    // Scroll the element\n    this.canvasEle.nativeElement.scrollTop = this.pos.top - dy;\n    this.canvasEle.nativeElement.scrollLeft = this.pos.left - dx;\n  }\n  mouseUpHandler(e) {\n    if (this.options.dragScroll.includes('LEFT') && e.button === 0 || this.options.dragScroll.includes('MIDDLE') && e.button === 1 || this.options.dragScroll.includes('RIGHT') && e.button === 2) {\n      document.removeEventListener('mousemove', this.mouseMoveHandler);\n      document.removeEventListener('mouseup', this.mouseUpHandler);\n    }\n  }\n  setOrientation(orientation) {\n    var options = {\n      ...this.options,\n      orientation: orientation\n    };\n    this.optionService.setOptions(options);\n    this._options = this.optionService.options;\n    //set orientation class for all steps\n    this.canvas.flow.steps.forEach(step => {\n      if (this.options.orientation === 'HORIZONTAL') {\n        step.nativeElement.classList.add('horizontal');\n      } else {\n        step.nativeElement.classList.remove('horizontal');\n      }\n    });\n    this.canvas.reRender(true);\n  }\n  static {\n    this.ɵfac = function NgFlowchartCanvasDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgFlowchartCanvasDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(NgFlowchartCanvasService), i0.ɵɵdirectiveInject(OptionsService));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgFlowchartCanvasDirective,\n      selectors: [[\"\", \"ngFlowchartCanvas\", \"\"]],\n      hostVars: 1,\n      hostBindings: function NgFlowchartCanvasDirective_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"drop\", function NgFlowchartCanvasDirective_drop_HostBindingHandler($event) {\n            return ctx.onDrop($event);\n          })(\"dragover\", function NgFlowchartCanvasDirective_dragover_HostBindingHandler($event) {\n            return ctx.onDragOver($event);\n          })(\"wheel\", function NgFlowchartCanvasDirective_wheel_HostBindingHandler($event) {\n            return ctx.onZoom($event);\n          })(\"mousedown\", function NgFlowchartCanvasDirective_mousedown_HostBindingHandler($event) {\n            return ctx.canvasDragScroll($event);\n          })(\"contextmenu\", function NgFlowchartCanvasDirective_contextmenu_HostBindingHandler($event) {\n            return ctx.onContextMenu($event);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"disabled\", ctx.disabled);\n        }\n      },\n      inputs: {\n        ngFlowchartCallbacks: \"ngFlowchartCallbacks\",\n        ngFlowchartOptions: \"ngFlowchartOptions\",\n        disabled: \"disabled\"\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([NgFlowchartCanvasService, StepManagerService, OptionsService, CanvasRendererService])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgFlowchartCanvasDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngFlowchartCanvas]',\n      providers: [NgFlowchartCanvasService, StepManagerService, OptionsService, CanvasRendererService]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.ViewContainerRef\n  }, {\n    type: NgFlowchartCanvasService\n  }, {\n    type: OptionsService\n  }], {\n    onDrop: [{\n      type: HostListener,\n      args: ['drop', ['$event']]\n    }],\n    onDragOver: [{\n      type: HostListener,\n      args: ['dragover', ['$event']]\n    }],\n    onZoom: [{\n      type: HostListener,\n      args: ['wheel', ['$event']]\n    }],\n    canvasDragScroll: [{\n      type: HostListener,\n      args: ['mousedown', ['$event']]\n    }],\n    onContextMenu: [{\n      type: HostListener,\n      args: ['contextmenu', ['$event']]\n    }],\n    ngFlowchartCallbacks: [{\n      type: Input\n    }],\n    ngFlowchartOptions: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }, {\n      type: HostBinding,\n      args: ['attr.disabled']\n    }]\n  });\n})();\nclass NgFlowchartStepDirective {\n  onDragStart(event) {\n    this.data.setDragStep(this.flowStep);\n    event.dataTransfer.setData('type', NgFlowchart.DropType.Step);\n    event.dataTransfer.setData('source', NgFlowchart.DropSource.Palette);\n  }\n  onDragEnd(event) {\n    this.data.setDragStep(null);\n  }\n  constructor(element, data) {\n    this.element = element;\n    this.data = data;\n    this.element.nativeElement.setAttribute('draggable', 'true');\n  }\n  ngAfterViewInit() {}\n  static {\n    this.ɵfac = function NgFlowchartStepDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgFlowchartStepDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(DropDataService));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgFlowchartStepDirective,\n      selectors: [[\"\", \"ngFlowchartStep\", \"\"]],\n      hostBindings: function NgFlowchartStepDirective_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"dragstart\", function NgFlowchartStepDirective_dragstart_HostBindingHandler($event) {\n            return ctx.onDragStart($event);\n          })(\"dragend\", function NgFlowchartStepDirective_dragend_HostBindingHandler($event) {\n            return ctx.onDragEnd($event);\n          });\n        }\n      },\n      inputs: {\n        flowStep: [0, \"ngFlowchartStep\", \"flowStep\"]\n      },\n      standalone: false\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgFlowchartStepDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngFlowchartStep]'\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: DropDataService\n  }], {\n    onDragStart: [{\n      type: HostListener,\n      args: ['dragstart', ['$event']]\n    }],\n    onDragEnd: [{\n      type: HostListener,\n      args: ['dragend', ['$event']]\n    }],\n    flowStep: [{\n      type: Input,\n      args: ['ngFlowchartStep']\n    }]\n  });\n})();\nclass NgFlowchartModule {\n  static {\n    this.ɵfac = function NgFlowchartModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgFlowchartModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NgFlowchartModule,\n      declarations: [NgFlowchartCanvasDirective, NgFlowchartStepDirective, NgFlowchartStepComponent, NgFlowchartArrowComponent, NgFlowchartConnectorComponent, NgFlowchartConnectorPadComponent, NgFlowchartPadArrowComponent],\n      imports: [CommonModule],\n      exports: [NgFlowchartCanvasDirective, NgFlowchartStepDirective]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgFlowchartModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgFlowchartCanvasDirective, NgFlowchartStepDirective, NgFlowchartStepComponent, NgFlowchartArrowComponent, NgFlowchartConnectorComponent, NgFlowchartConnectorPadComponent, NgFlowchartPadArrowComponent],\n      imports: [CommonModule],\n      exports: [NgFlowchartCanvasDirective, NgFlowchartStepDirective]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of ng-flowchart\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgFlowchart, NgFlowchartArrowComponent, NgFlowchartCanvasDirective, NgFlowchartModule, NgFlowchartStepComponent, NgFlowchartStepDirective, NgFlowchartStepRegistry, OptionsService };\n"],
  "mappings": "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",
  "names": ["NgFlowchart", "DropType", "DropSource", "closest", "step"]
}
